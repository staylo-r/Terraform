{
  "format_version": "1.0",
  "terraform_version": "1.1.6",
  "variables": {
    "my_bucket_name": {
      "value": "this-bucket-wont-be-deleted1123"
    },
    "my_ip_address": {
      "value": "69.249.56.91/32"
    },
    "my_ssh_public_key": {
      "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClcA8kp7FqrQaOHEjNamL8A1u33efe6ffWClYxKKDk9L8BEA7mYwGXqsfWyGHtchhKG9r6XhPll0t2S5eS8e5QIRwLQrkhUBLjzyR6u1H2mAqLiN4Jbo6wc3Szku78hZ7oyMPbWB4jscMLwGYSlJWk/9IKex7X/JHSarFF4pXERknuOaHkVgpfVQ1GMCUn+ooWYE6eVbMjxE26j87S5ykSzhczdxu2dqAPjSFnjbBGjKQTeppvT1QBR3+flqFlA58eif1zCDfiYQ+L6CjBN/hlpF5xBJPdCxCmzcQ9nefjxsjOnQniZcyJ5NOvtQCU8UaJra0LDOHs1pO4uJoXCbDevTscWSCJXbroZ+Ml7lPq5WYYuWlS3XOaEAQmdIHXoJa+8k03C7nf3AM2iB0ss9LM5bGHGuVKsLuZEbLxcEUnyF2EbwyigwoV6qfIRQqlG2V9Xs+kAphln2k+I1kKVIpqzB9PQFBPp2VKauvoqsLXPr0OG/c+qy+6XNbrlgUIJPc= steve@Steves-MacBook-Pro.local"
    },
    "region": {
      "value": "us-east-1"
    },
    "wiz_connector_external_id": {
      "value": "145cc1fc-3303-483f-a5e3-7a253e36127e"
    }
  },
  "planned_values": {
    "outputs": {
      "cluster_endpoint": {
        "sensitive": false
      },
      "cluster_id": {
        "sensitive": false
      },
      "cluster_name": {
        "sensitive": false
      },
      "cluster_security_group_id": {
        "sensitive": false
      },
      "config_map_aws_auth": {
        "sensitive": false
      },
      "kubectl_config": {
        "sensitive": false
      },
      "region": {
        "sensitive": false,
        "value": "us-east-1"
      },
      "wiz_connector_arn": {
        "sensitive": false
      },
      "wiz_external_id": {
        "sensitive": false
      }
    },
    "root_module": {
      "resources": [
        {
          "address": "aws_ebs_volume.mongovol[0]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "mongovol",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "us-east-1a",
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 4,
            "tags": {
              "Name": "volume-mongo-1"
            },
            "tags_all": {
              "Name": "volume-mongo-1"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_ebs_volume.mongovol[1]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "mongovol",
          "index": 1,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "us-east-1a",
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 4,
            "tags": {
              "Name": "volume-mongo-2"
            },
            "tags_all": {
              "Name": "volume-mongo-2"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_ebs_volume.mongovol[2]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "mongovol",
          "index": 2,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "us-east-1a",
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 4,
            "tags": {
              "Name": "volume-mongo-3"
            },
            "tags_all": {
              "Name": "volume-mongo-3"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_ebs_volume.mongovol[3]",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "mongovol",
          "index": 3,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "availability_zone": "us-east-1a",
            "final_snapshot": false,
            "multi_attach_enabled": null,
            "outpost_arn": null,
            "size": 4,
            "tags": {
              "Name": "volume-mongo-4"
            },
            "tags_all": {
              "Name": "volume-mongo-4"
            },
            "timeouts": null
          },
          "sensitive_values": {
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_eip.mongoeip",
          "mode": "managed",
          "type": "aws_eip",
          "name": "mongoeip",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "address": null,
            "associate_with_private_ip": null,
            "customer_owned_ipv4_pool": null,
            "tags": null,
            "timeouts": null,
            "vpc": true
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_instance_profile.mongo_profile",
          "mode": "managed",
          "type": "aws_iam_instance_profile",
          "name": "mongo_profile",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "name": "allow-mongo-ec2",
            "name_prefix": null,
            "path": "/",
            "role": "WizRole",
            "tags": null
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_policy.wizpolicy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "wizpolicy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": null,
            "name": "WizAllowEC2All",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
            "tags": null
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_role.wizrole",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "wizrole",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "description": null,
            "force_detach_policies": false,
            "max_session_duration": 3600,
            "name": "WizRole",
            "path": "/",
            "permissions_boundary": null,
            "tags": null
          },
          "sensitive_values": {
            "inline_policy": [],
            "managed_policy_arns": [],
            "tags_all": {}
          }
        },
        {
          "address": "aws_iam_role_policy_attachment.wiz-attach",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "wiz-attach",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "role": "WizRole"
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_instance.mongodb",
          "mode": "managed",
          "type": "aws_instance",
          "name": "mongodb",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "ami": "ami-0023040df18933030",
            "credit_specification": [],
            "get_password_data": false,
            "hibernation": null,
            "iam_instance_profile": "allow-mongo-ec2",
            "instance_type": "m1.large",
            "key_name": "deployer-key",
            "launch_template": [],
            "network_interface": [
              {
                "delete_on_termination": false,
                "device_index": 0,
                "network_card_index": 0
              }
            ],
            "source_dest_check": null,
            "tags": {
              "Name": "mongo-master",
              "Owner": "Tom"
            },
            "tags_all": {
              "Name": "mongo-master",
              "Owner": "Tom"
            },
            "timeouts": null,
            "user_data": "97f7f1fd28e8781aa889b017141c3a86503b3a4f",
            "user_data_replace_on_change": false,
            "volume_tags": null
          },
          "sensitive_values": {
            "capacity_reservation_specification": [],
            "credit_specification": [],
            "ebs_block_device": [],
            "enclave_options": [],
            "ephemeral_block_device": [],
            "ipv6_addresses": [],
            "launch_template": [],
            "maintenance_options": [],
            "metadata_options": [],
            "network_interface": [
              {}
            ],
            "private_dns_name_options": [],
            "root_block_device": [],
            "secondary_private_ips": [],
            "security_groups": [],
            "tags": {},
            "tags_all": {},
            "vpc_security_group_ids": []
          }
        },
        {
          "address": "aws_key_pair.deployer",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "deployer",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "key_name": "deployer-key",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClcA8kp7FqrQaOHEjNamL8A1u33efe6ffWClYxKKDk9L8BEA7mYwGXqsfWyGHtchhKG9r6XhPll0t2S5eS8e5QIRwLQrkhUBLjzyR6u1H2mAqLiN4Jbo6wc3Szku78hZ7oyMPbWB4jscMLwGYSlJWk/9IKex7X/JHSarFF4pXERknuOaHkVgpfVQ1GMCUn+ooWYE6eVbMjxE26j87S5ykSzhczdxu2dqAPjSFnjbBGjKQTeppvT1QBR3+flqFlA58eif1zCDfiYQ+L6CjBN/hlpF5xBJPdCxCmzcQ9nefjxsjOnQniZcyJ5NOvtQCU8UaJra0LDOHs1pO4uJoXCbDevTscWSCJXbroZ+Ml7lPq5WYYuWlS3XOaEAQmdIHXoJa+8k03C7nf3AM2iB0ss9LM5bGHGuVKsLuZEbLxcEUnyF2EbwyigwoV6qfIRQqlG2V9Xs+kAphln2k+I1kKVIpqzB9PQFBPp2VKauvoqsLXPr0OG/c+qy+6XNbrlgUIJPc= steve@Steves-MacBook-Pro.local",
            "tags": null
          },
          "sensitive_values": {
            "tags_all": {}
          }
        },
        {
          "address": "aws_network_interface.mongo-eth0",
          "mode": "managed",
          "type": "aws_network_interface",
          "name": "mongo-eth0",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "description": null,
            "ipv6_address_list_enabled": false,
            "private_ip_list_enabled": false,
            "private_ips": [
              "10.0.4.100"
            ],
            "source_dest_check": true,
            "tags": {
              "Name": "primary_network_interface"
            },
            "tags_all": {
              "Name": "primary_network_interface"
            }
          },
          "sensitive_values": {
            "attachment": [],
            "ipv4_prefixes": [],
            "ipv6_address_list": [],
            "ipv6_addresses": [],
            "ipv6_prefixes": [],
            "private_ip_list": [],
            "private_ips": [
              false
            ],
            "security_groups": [],
            "tags": {},
            "tags_all": {}
          }
        },
        {
          "address": "aws_s3_bucket.wizdemo-bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "wizdemo-bucket",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "bucket": "this-bucket-wont-be-deleted1123",
            "bucket_prefix": null,
            "force_destroy": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "cors_rule": [],
            "grant": [],
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "replication_configuration": [],
            "server_side_encryption_configuration": [],
            "tags_all": {},
            "versioning": [],
            "website": []
          }
        },
        {
          "address": "aws_security_group.DBSG",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "DBSG",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Allow ssh  inbound traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              }
            ],
            "name": "DBSG",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.all_worker_mgmt",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "all_worker_mgmt",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8",
                  "172.16.0.0/12",
                  "192.168.0.0/16"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name_prefix": "all_worker_management",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false,
                  false,
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.application",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "application",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8",
                  "172.16.0.0/12",
                  "192.168.0.0/16"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 65535
              }
            ],
            "name_prefix": "database_mgmt",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false,
                  false,
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.database",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "database",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 22
              }
            ],
            "name_prefix": "worker_group_mgmt_two",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.general_admin",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "general_admin",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [
                  "::/0"
                ],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8"
                ],
                "description": "",
                "from_port": 27017,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 27017
              },
              {
                "cidr_blocks": [
                  "69.249.56.91/32"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name_prefix": "general_admin",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [
                  false
                ],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              },
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.worker_group_mgmt_one",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "worker_group_mgmt_one",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "ingress": [
              {
                "cidr_blocks": [
                  "10.0.0.0/8"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name_prefix": "worker_group_mgmt_one",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_security_group.worker_group_mgmt_two",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "worker_group_mgmt_two",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "values": {
            "description": "Managed by Terraform",
            "ingress": [
              {
                "cidr_blocks": [
                  "192.168.0.0/16"
                ],
                "description": "",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name_prefix": "worker_group_mgmt_two",
            "revoke_rules_on_delete": false,
            "tags": null,
            "timeouts": null
          },
          "sensitive_values": {
            "egress": [],
            "ingress": [
              {
                "cidr_blocks": [
                  false
                ],
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "security_groups": []
              }
            ],
            "tags_all": {}
          }
        },
        {
          "address": "aws_volume_attachment.ebs_att[0]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_att",
          "index": 0,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdh1",
            "force_detach": null,
            "skip_destroy": true,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_volume_attachment.ebs_att[1]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_att",
          "index": 1,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdh2",
            "force_detach": null,
            "skip_destroy": true,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_volume_attachment.ebs_att[2]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_att",
          "index": 2,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdh3",
            "force_detach": null,
            "skip_destroy": true,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "aws_volume_attachment.ebs_att[3]",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_att",
          "index": 3,
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "values": {
            "device_name": "/dev/sdh4",
            "force_detach": null,
            "skip_destroy": true,
            "stop_instance_before_detaching": null,
            "timeouts": null
          },
          "sensitive_values": {}
        },
        {
          "address": "data.aws_eks_cluster.cluster",
          "mode": "data",
          "type": "aws_eks_cluster",
          "name": "cluster",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
            "certificate_authority": [],
            "enabled_cluster_log_types": [],
            "identity": [],
            "kubernetes_network_config": [],
            "tags": {},
            "vpc_config": []
          }
        },
        {
          "address": "data.aws_eks_cluster_auth.cluster",
          "mode": "data",
          "type": "aws_eks_cluster_auth",
          "name": "cluster",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {}
        },
        {
          "address": "random_string.suffix",
          "mode": "managed",
          "type": "random_string",
          "name": "suffix",
          "provider_name": "registry.terraform.io/hashicorp/random",
          "schema_version": 1,
          "values": {
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "special": false,
            "upper": true
          },
          "sensitive_values": {}
        }
      ],
      "child_modules": [
        {
          "resources": [
            {
              "address": "module.eks.aws_autoscaling_group.workers[0]",
              "mode": "managed",
              "type": "aws_autoscaling_group",
              "name": "workers",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "capacity_rebalance": false,
                "context": null,
                "default_instance_warmup": null,
                "desired_capacity": 2,
                "enabled_metrics": null,
                "force_delete": false,
                "force_delete_warm_pool": false,
                "health_check_grace_period": 300,
                "initial_lifecycle_hook": [],
                "instance_refresh": [],
                "launch_template": [],
                "load_balancers": null,
                "max_instance_lifetime": 0,
                "max_size": 3,
                "metrics_granularity": "1Minute",
                "min_elb_capacity": null,
                "min_size": 1,
                "mixed_instances_policy": [],
                "placement_group": null,
                "protect_from_scale_in": false,
                "suspended_processes": [
                  "AZRebalance"
                ],
                "tag": [
                  {
                    "key": "Environment",
                    "propagate_at_launch": true,
                    "value": "training"
                  },
                  {
                    "key": "GithubOrg",
                    "propagate_at_launch": true,
                    "value": "terraform-aws-modules"
                  },
                  {
                    "key": "GithubRepo",
                    "propagate_at_launch": true,
                    "value": "terraform-aws-eks"
                  },
                  {
                    "key": "Name",
                    "propagate_at_launch": true
                  },
                  {
                    "propagate_at_launch": true,
                    "value": "owned"
                  },
                  {
                    "propagate_at_launch": true,
                    "value": "owned"
                  }
                ],
                "tags": null,
                "target_group_arns": null,
                "termination_policies": [],
                "timeouts": null,
                "wait_for_capacity_timeout": "10m",
                "wait_for_elb_capacity": null,
                "warm_pool": []
              },
              "sensitive_values": {
                "availability_zones": [],
                "initial_lifecycle_hook": [],
                "instance_refresh": [],
                "launch_template": [],
                "mixed_instances_policy": [],
                "suspended_processes": [
                  false
                ],
                "tag": [
                  {},
                  {},
                  {},
                  {},
                  {},
                  {}
                ],
                "termination_policies": [],
                "vpc_zone_identifier": [],
                "warm_pool": []
              }
            },
            {
              "address": "module.eks.aws_autoscaling_group.workers[1]",
              "mode": "managed",
              "type": "aws_autoscaling_group",
              "name": "workers",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "capacity_rebalance": false,
                "context": null,
                "default_instance_warmup": null,
                "desired_capacity": 1,
                "enabled_metrics": null,
                "force_delete": false,
                "force_delete_warm_pool": false,
                "health_check_grace_period": 300,
                "initial_lifecycle_hook": [],
                "instance_refresh": [],
                "launch_template": [],
                "load_balancers": null,
                "max_instance_lifetime": 0,
                "max_size": 3,
                "metrics_granularity": "1Minute",
                "min_elb_capacity": null,
                "min_size": 1,
                "mixed_instances_policy": [],
                "placement_group": null,
                "protect_from_scale_in": false,
                "suspended_processes": [
                  "AZRebalance"
                ],
                "tag": [
                  {
                    "key": "Environment",
                    "propagate_at_launch": true,
                    "value": "training"
                  },
                  {
                    "key": "GithubOrg",
                    "propagate_at_launch": true,
                    "value": "terraform-aws-modules"
                  },
                  {
                    "key": "GithubRepo",
                    "propagate_at_launch": true,
                    "value": "terraform-aws-eks"
                  },
                  {
                    "key": "Name",
                    "propagate_at_launch": true
                  },
                  {
                    "propagate_at_launch": true,
                    "value": "owned"
                  },
                  {
                    "propagate_at_launch": true,
                    "value": "owned"
                  }
                ],
                "tags": null,
                "target_group_arns": null,
                "termination_policies": [],
                "timeouts": null,
                "wait_for_capacity_timeout": "10m",
                "wait_for_elb_capacity": null,
                "warm_pool": []
              },
              "sensitive_values": {
                "availability_zones": [],
                "initial_lifecycle_hook": [],
                "instance_refresh": [],
                "launch_template": [],
                "mixed_instances_policy": [],
                "suspended_processes": [
                  false
                ],
                "tag": [
                  {},
                  {},
                  {},
                  {},
                  {},
                  {}
                ],
                "termination_policies": [],
                "vpc_zone_identifier": [],
                "warm_pool": []
              }
            },
            {
              "address": "module.eks.aws_eks_cluster.this[0]",
              "mode": "managed",
              "type": "aws_eks_cluster",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "enabled_cluster_log_types": null,
                "encryption_config": [],
                "kubernetes_network_config": [
                  {}
                ],
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "timeouts": {
                  "create": "30m",
                  "delete": "15m",
                  "update": "60m"
                },
                "version": "1.20",
                "vpc_config": [
                  {
                    "endpoint_private_access": false,
                    "endpoint_public_access": true,
                    "public_access_cidrs": [
                      "0.0.0.0/0"
                    ]
                  }
                ]
              },
              "sensitive_values": {
                "certificate_authority": [],
                "encryption_config": [],
                "identity": [],
                "kubernetes_network_config": [
                  {}
                ],
                "tags": {},
                "tags_all": {},
                "timeouts": {},
                "vpc_config": [
                  {
                    "public_access_cidrs": [
                      false
                    ],
                    "security_group_ids": [],
                    "subnet_ids": []
                  }
                ]
              }
            },
            {
              "address": "module.eks.aws_iam_instance_profile.workers[0]",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "workers",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "path": "/",
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_instance_profile.workers[1]",
              "mode": "managed",
              "type": "aws_iam_instance_profile",
              "name": "workers",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "path": "/",
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "cluster_deny_log_group",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "description": "Deny CreateLogGroup",
                "path": "/",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
              "mode": "managed",
              "type": "aws_iam_policy",
              "name": "cluster_elb_sl_role_creation",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
                "path": "/",
                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role.cluster[0]",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "cluster",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                "description": null,
                "force_detach_policies": true,
                "max_session_duration": 3600,
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "inline_policy": [],
                "managed_policy_arns": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role.workers[0]",
              "mode": "managed",
              "type": "aws_iam_role",
              "name": "workers",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSWorkerAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                "description": null,
                "force_detach_policies": true,
                "max_session_duration": 3600,
                "path": "/",
                "permissions_boundary": null,
                "tags": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                },
                "tags_all": {
                  "Environment": "training",
                  "GithubOrg": "terraform-aws-modules",
                  "GithubRepo": "terraform-aws-eks"
                }
              },
              "sensitive_values": {
                "inline_policy": [],
                "managed_policy_arns": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "cluster_AmazonEKSClusterPolicy",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "cluster_AmazonEKSServicePolicy",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "cluster_deny_log_group",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "cluster_elb_sl_role_creation",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "workers_AmazonEC2ContainerRegistryReadOnly",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "workers_AmazonEKSWorkerNodePolicy",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
              "mode": "managed",
              "type": "aws_iam_role_policy_attachment",
              "name": "workers_AmazonEKS_CNI_Policy",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_launch_configuration.workers[0]",
              "mode": "managed",
              "type": "aws_launch_configuration",
              "name": "workers",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "associate_public_ip_address": false,
                "ebs_optimized": false,
                "enable_monitoring": true,
                "ephemeral_block_device": [],
                "image_id": "ami-0f9112de1cc4579fb",
                "instance_type": "t2.small",
                "metadata_options": [
                  {
                    "http_endpoint": "enabled",
                    "http_tokens": "optional"
                  }
                ],
                "placement_tenancy": "",
                "root_block_device": [
                  {
                    "delete_on_termination": true,
                    "encrypted": false,
                    "iops": 0,
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "spot_price": "",
                "user_data": null,
                "vpc_classic_link_id": null,
                "vpc_classic_link_security_groups": null
              },
              "sensitive_values": {
                "ebs_block_device": [],
                "ephemeral_block_device": [],
                "metadata_options": [
                  {}
                ],
                "root_block_device": [
                  {}
                ],
                "security_groups": []
              }
            },
            {
              "address": "module.eks.aws_launch_configuration.workers[1]",
              "mode": "managed",
              "type": "aws_launch_configuration",
              "name": "workers",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "associate_public_ip_address": false,
                "ebs_optimized": false,
                "enable_monitoring": true,
                "ephemeral_block_device": [],
                "image_id": "ami-0f9112de1cc4579fb",
                "instance_type": "t2.medium",
                "metadata_options": [
                  {
                    "http_endpoint": "enabled",
                    "http_tokens": "optional"
                  }
                ],
                "placement_tenancy": "",
                "root_block_device": [
                  {
                    "delete_on_termination": true,
                    "encrypted": false,
                    "iops": 0,
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "spot_price": "",
                "user_data": null,
                "vpc_classic_link_id": null,
                "vpc_classic_link_security_groups": null
              },
              "sensitive_values": {
                "ebs_block_device": [],
                "ephemeral_block_device": [],
                "metadata_options": [
                  {}
                ],
                "root_block_device": [
                  {}
                ],
                "security_groups": []
              }
            },
            {
              "address": "module.eks.aws_security_group.cluster[0]",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "cluster",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "description": "EKS cluster security group.",
                "revoke_rules_on_delete": false,
                "timeouts": null
              },
              "sensitive_values": {
                "egress": [],
                "ingress": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_security_group.workers[0]",
              "mode": "managed",
              "type": "aws_security_group",
              "name": "workers",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "description": "Security group for all nodes in the cluster.",
                "revoke_rules_on_delete": false,
                "timeouts": null
              },
              "sensitive_values": {
                "egress": [],
                "ingress": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "cluster_egress_internet",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow cluster egress access to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "-1",
                "self": false,
                "timeouts": null,
                "to_port": 0,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [
                  false
                ]
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "cluster_https_worker_ingress",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": null,
                "description": "Allow pods to communicate with the EKS cluster API.",
                "from_port": 443,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "tcp",
                "self": false,
                "timeouts": null,
                "to_port": 443,
                "type": "ingress"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "workers_egress_internet",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow nodes all egress to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "-1",
                "self": false,
                "timeouts": null,
                "to_port": 0,
                "type": "egress"
              },
              "sensitive_values": {
                "cidr_blocks": [
                  false
                ]
              }
            },
            {
              "address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "workers_ingress_cluster",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": null,
                "description": "Allow workers pods to receive communication from the cluster control plane.",
                "from_port": 1025,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "tcp",
                "self": false,
                "timeouts": null,
                "to_port": 65535,
                "type": "ingress"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "workers_ingress_cluster_https",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": null,
                "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
                "from_port": 443,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "tcp",
                "self": false,
                "timeouts": null,
                "to_port": 443,
                "type": "ingress"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
              "mode": "managed",
              "type": "aws_security_group_rule",
              "name": "workers_ingress_self",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 2,
              "values": {
                "cidr_blocks": null,
                "description": "Allow node to communicate with each other.",
                "from_port": 0,
                "ipv6_cidr_blocks": null,
                "prefix_list_ids": null,
                "protocol": "-1",
                "self": false,
                "timeouts": null,
                "to_port": 65535,
                "type": "ingress"
              },
              "sensitive_values": {}
            },
            {
              "address": "module.eks.data.http.wait_for_cluster[0]",
              "mode": "data",
              "type": "http",
              "name": "wait_for_cluster",
              "index": 0,
              "provider_name": "registry.terraform.io/terraform-aws-modules/http",
              "schema_version": 0,
              "values": {
                "insecure": null,
                "request_headers": null,
                "timeout": 300
              },
              "sensitive_values": {
                "response_headers": {}
              }
            },
            {
              "address": "module.eks.kubernetes_config_map.aws_auth[0]",
              "mode": "managed",
              "type": "kubernetes_config_map",
              "name": "aws_auth",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/kubernetes",
              "schema_version": 0,
              "values": {
                "binary_data": null,
                "metadata": [
                  {
                    "annotations": null,
                    "generate_name": null,
                    "labels": {
                      "app.kubernetes.io/managed-by": "Terraform",
                      "terraform.io/module": "terraform-aws-modules.eks.aws"
                    },
                    "name": "aws-auth",
                    "namespace": "kube-system"
                  }
                ]
              },
              "sensitive_values": {
                "data": {},
                "metadata": [
                  {
                    "labels": {}
                  }
                ]
              }
            },
            {
              "address": "module.eks.local_file.kubeconfig[0]",
              "mode": "managed",
              "type": "local_file",
              "name": "kubeconfig",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/local",
              "schema_version": 0,
              "values": {
                "content_base64": null,
                "directory_permission": "0755",
                "file_permission": "0600",
                "sensitive_content": null,
                "source": null
              },
              "sensitive_values": {}
            }
          ],
          "address": "module.eks"
        },
        {
          "resources": [
            {
              "address": "module.vpc.aws_eip.nat[0]",
              "mode": "managed",
              "type": "aws_eip",
              "name": "nat",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "address": null,
                "associate_with_private_ip": null,
                "customer_owned_ipv4_pool": null,
                "timeouts": null,
                "vpc": true
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_internet_gateway.this[0]",
              "mode": "managed",
              "type": "aws_internet_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_nat_gateway.this[0]",
              "mode": "managed",
              "type": "aws_nat_gateway",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "connectivity_type": "public"
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route.private_nat_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "private_nat_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": null,
                "core_network_arn": null,
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": null,
                "destination_prefix_list_id": null,
                "egress_only_gateway_id": null,
                "gateway_id": null,
                "local_gateway_id": null,
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": null,
                "vpc_endpoint_id": null,
                "vpc_peering_connection_id": null
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route.public_internet_gateway[0]",
              "mode": "managed",
              "type": "aws_route",
              "name": "public_internet_gateway",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "carrier_gateway_id": null,
                "core_network_arn": null,
                "destination_cidr_block": "0.0.0.0/0",
                "destination_ipv6_cidr_block": null,
                "destination_prefix_list_id": null,
                "egress_only_gateway_id": null,
                "local_gateway_id": null,
                "nat_gateway_id": null,
                "timeouts": {
                  "create": "5m",
                  "delete": null,
                  "update": null
                },
                "transit_gateway_id": null,
                "vpc_endpoint_id": null,
                "vpc_peering_connection_id": null
              },
              "sensitive_values": {
                "timeouts": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.private[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "timeouts": null
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table.public[0]",
              "mode": "managed",
              "type": "aws_route_table",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "timeouts": null
              },
              "sensitive_values": {
                "propagating_vgws": [],
                "route": [],
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_route_table_association.private[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.private[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[0]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[1]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_route_table_association.public[2]",
              "mode": "managed",
              "type": "aws_route_table_association",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "gateway_id": null
              },
              "sensitive_values": {}
            },
            {
              "address": "module.vpc.aws_subnet.private[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "cidr_block": "10.0.1.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1b",
                "cidr_block": "10.0.2.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.private[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "private",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1c",
                "cidr_block": "10.0.3.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": false,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[0]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1a",
                "cidr_block": "10.0.4.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": true,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[1]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 1,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1b",
                "cidr_block": "10.0.5.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": true,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_subnet.public[2]",
              "mode": "managed",
              "type": "aws_subnet",
              "name": "public",
              "index": 2,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_ipv6_address_on_creation": false,
                "availability_zone": "us-east-1c",
                "cidr_block": "10.0.6.0/24",
                "customer_owned_ipv4_pool": null,
                "enable_dns64": false,
                "enable_resource_name_dns_a_record_on_launch": false,
                "enable_resource_name_dns_aaaa_record_on_launch": false,
                "ipv6_cidr_block": null,
                "ipv6_native": false,
                "map_customer_owned_ip_on_launch": null,
                "map_public_ip_on_launch": true,
                "outpost_arn": null,
                "timeouts": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            },
            {
              "address": "module.vpc.aws_vpc.this[0]",
              "mode": "managed",
              "type": "aws_vpc",
              "name": "this",
              "index": 0,
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 1,
              "values": {
                "assign_generated_ipv6_cidr_block": false,
                "cidr_block": "10.0.0.0/16",
                "enable_dns_hostnames": true,
                "enable_dns_support": true,
                "instance_tenancy": "default",
                "ipv4_ipam_pool_id": null,
                "ipv4_netmask_length": null,
                "ipv6_ipam_pool_id": null,
                "ipv6_netmask_length": null
              },
              "sensitive_values": {
                "tags": {},
                "tags_all": {}
              }
            }
          ],
          "address": "module.vpc"
        },
        {
          "resources": [
            {
              "address": "module.wiz.aws_cloudformation_stack.wiz",
              "mode": "managed",
              "type": "aws_cloudformation_stack",
              "name": "wiz",
              "provider_name": "registry.terraform.io/hashicorp/aws",
              "schema_version": 0,
              "values": {
                "capabilities": [
                  "CAPABILITY_NAMED_IAM"
                ],
                "disable_rollback": null,
                "iam_role_arn": null,
                "name": "wiz-security",
                "notification_arns": null,
                "on_failure": null,
                "parameters": {
                  "ExternalId": "145cc1fc-3303-483f-a5e3-7a253e36127e",
                  "WizRoleName": "WizAccess-Role"
                },
                "policy_url": null,
                "tags": {
                  "name": "wiz"
                },
                "tags_all": {
                  "name": "wiz"
                },
                "template_url": "https://wizio-public.s3.amazonaws.com/deployment-v2/aws/wiz-aws-standard-prod4test.json",
                "timeout_in_minutes": null,
                "timeouts": null
              },
              "sensitive_values": {
                "capabilities": [
                  false
                ],
                "outputs": {},
                "parameters": {},
                "tags": {},
                "tags_all": {}
              }
            }
          ],
          "address": "module.wiz"
        }
      ]
    }
  },
  "resource_changes": [
    {
      "address": "aws_ebs_volume.mongovol[0]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "mongovol",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "us-east-1a",
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 4,
          "tags": {
            "Name": "volume-mongo-1"
          },
          "tags_all": {
            "Name": "volume-mongo-1"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "encrypted": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true,
          "type": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_ebs_volume.mongovol[1]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "mongovol",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "us-east-1a",
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 4,
          "tags": {
            "Name": "volume-mongo-2"
          },
          "tags_all": {
            "Name": "volume-mongo-2"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "encrypted": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true,
          "type": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_ebs_volume.mongovol[2]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "mongovol",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "us-east-1a",
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 4,
          "tags": {
            "Name": "volume-mongo-3"
          },
          "tags_all": {
            "Name": "volume-mongo-3"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "encrypted": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true,
          "type": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_ebs_volume.mongovol[3]",
      "mode": "managed",
      "type": "aws_ebs_volume",
      "name": "mongovol",
      "index": 3,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "availability_zone": "us-east-1a",
          "final_snapshot": false,
          "multi_attach_enabled": null,
          "outpost_arn": null,
          "size": 4,
          "tags": {
            "Name": "volume-mongo-4"
          },
          "tags_all": {
            "Name": "volume-mongo-4"
          },
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "encrypted": true,
          "id": true,
          "iops": true,
          "kms_key_id": true,
          "snapshot_id": true,
          "tags": {},
          "tags_all": {},
          "throughput": true,
          "type": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_eip.mongoeip",
      "mode": "managed",
      "type": "aws_eip",
      "name": "mongoeip",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address": null,
          "associate_with_private_ip": null,
          "customer_owned_ipv4_pool": null,
          "tags": null,
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {
          "allocation_id": true,
          "association_id": true,
          "carrier_ip": true,
          "customer_owned_ip": true,
          "domain": true,
          "id": true,
          "instance": true,
          "network_border_group": true,
          "network_interface": true,
          "private_dns": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "public_ipv4_pool": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_instance_profile.mongo_profile",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "mongo_profile",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "name": "allow-mongo-ec2",
          "name_prefix": null,
          "path": "/",
          "role": "WizRole",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_policy.wizpolicy",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "wizpolicy",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": null,
          "name": "WizAllowEC2All",
          "name_prefix": null,
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "policy_id": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role.wizrole",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "wizrole",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": false,
          "max_session_duration": 3600,
          "name": "WizRole",
          "path": "/",
          "permissions_boundary": null,
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name_prefix": true,
          "tags_all": true,
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_iam_role_policy_attachment.wiz-attach",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "wiz-attach",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "role": "WizRole"
        },
        "after_unknown": {
          "id": true,
          "policy_arn": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_instance.mongodb",
      "mode": "managed",
      "type": "aws_instance",
      "name": "mongodb",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "ami": "ami-0023040df18933030",
          "credit_specification": [],
          "get_password_data": false,
          "hibernation": null,
          "iam_instance_profile": "allow-mongo-ec2",
          "instance_type": "m1.large",
          "key_name": "deployer-key",
          "launch_template": [],
          "network_interface": [
            {
              "delete_on_termination": false,
              "device_index": 0,
              "network_card_index": 0
            }
          ],
          "source_dest_check": null,
          "tags": {
            "Name": "mongo-master",
            "Owner": "Tom"
          },
          "tags_all": {
            "Name": "mongo-master",
            "Owner": "Tom"
          },
          "timeouts": null,
          "user_data": "97f7f1fd28e8781aa889b017141c3a86503b3a4f",
          "user_data_replace_on_change": false,
          "volume_tags": null
        },
        "after_unknown": {
          "arn": true,
          "associate_public_ip_address": true,
          "availability_zone": true,
          "capacity_reservation_specification": true,
          "cpu_core_count": true,
          "cpu_threads_per_core": true,
          "credit_specification": [],
          "disable_api_stop": true,
          "disable_api_termination": true,
          "ebs_block_device": true,
          "ebs_optimized": true,
          "enclave_options": true,
          "ephemeral_block_device": true,
          "host_id": true,
          "id": true,
          "instance_initiated_shutdown_behavior": true,
          "instance_state": true,
          "ipv6_address_count": true,
          "ipv6_addresses": true,
          "launch_template": [],
          "maintenance_options": true,
          "metadata_options": true,
          "monitoring": true,
          "network_interface": [
            {
              "network_interface_id": true
            }
          ],
          "outpost_arn": true,
          "password_data": true,
          "placement_group": true,
          "placement_partition_number": true,
          "primary_network_interface_id": true,
          "private_dns": true,
          "private_dns_name_options": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "root_block_device": true,
          "secondary_private_ips": true,
          "security_groups": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {},
          "tenancy": true,
          "user_data_base64": true,
          "vpc_security_group_ids": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capacity_reservation_specification": [],
          "credit_specification": [],
          "ebs_block_device": [],
          "enclave_options": [],
          "ephemeral_block_device": [],
          "ipv6_addresses": [],
          "launch_template": [],
          "maintenance_options": [],
          "metadata_options": [],
          "network_interface": [
            {}
          ],
          "private_dns_name_options": [],
          "root_block_device": [],
          "secondary_private_ips": [],
          "security_groups": [],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": []
        }
      }
    },
    {
      "address": "aws_key_pair.deployer",
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "deployer",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "key_name": "deployer-key",
          "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClcA8kp7FqrQaOHEjNamL8A1u33efe6ffWClYxKKDk9L8BEA7mYwGXqsfWyGHtchhKG9r6XhPll0t2S5eS8e5QIRwLQrkhUBLjzyR6u1H2mAqLiN4Jbo6wc3Szku78hZ7oyMPbWB4jscMLwGYSlJWk/9IKex7X/JHSarFF4pXERknuOaHkVgpfVQ1GMCUn+ooWYE6eVbMjxE26j87S5ykSzhczdxu2dqAPjSFnjbBGjKQTeppvT1QBR3+flqFlA58eif1zCDfiYQ+L6CjBN/hlpF5xBJPdCxCmzcQ9nefjxsjOnQniZcyJ5NOvtQCU8UaJra0LDOHs1pO4uJoXCbDevTscWSCJXbroZ+Ml7lPq5WYYuWlS3XOaEAQmdIHXoJa+8k03C7nf3AM2iB0ss9LM5bGHGuVKsLuZEbLxcEUnyF2EbwyigwoV6qfIRQqlG2V9Xs+kAphln2k+I1kKVIpqzB9PQFBPp2VKauvoqsLXPr0OG/c+qy+6XNbrlgUIJPc= steve@Steves-MacBook-Pro.local",
          "tags": null
        },
        "after_unknown": {
          "arn": true,
          "fingerprint": true,
          "id": true,
          "key_name_prefix": true,
          "key_pair_id": true,
          "key_type": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_network_interface.mongo-eth0",
      "mode": "managed",
      "type": "aws_network_interface",
      "name": "mongo-eth0",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": null,
          "ipv6_address_list_enabled": false,
          "private_ip_list_enabled": false,
          "private_ips": [
            "10.0.4.100"
          ],
          "source_dest_check": true,
          "tags": {
            "Name": "primary_network_interface"
          },
          "tags_all": {
            "Name": "primary_network_interface"
          }
        },
        "after_unknown": {
          "arn": true,
          "attachment": true,
          "id": true,
          "interface_type": true,
          "ipv4_prefix_count": true,
          "ipv4_prefixes": true,
          "ipv6_address_count": true,
          "ipv6_address_list": true,
          "ipv6_addresses": true,
          "ipv6_prefix_count": true,
          "ipv6_prefixes": true,
          "mac_address": true,
          "outpost_arn": true,
          "owner_id": true,
          "private_dns_name": true,
          "private_ip": true,
          "private_ip_list": true,
          "private_ips": [
            false
          ],
          "private_ips_count": true,
          "security_groups": true,
          "subnet_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "attachment": [],
          "ipv4_prefixes": [],
          "ipv6_address_list": [],
          "ipv6_addresses": [],
          "ipv6_prefixes": [],
          "private_ip_list": [],
          "private_ips": [
            false
          ],
          "security_groups": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_s3_bucket.wizdemo-bucket",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "wizdemo-bucket",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "bucket": "this-bucket-wont-be-deleted1123",
          "bucket_prefix": null,
          "force_destroy": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "acceleration_status": true,
          "acl": true,
          "arn": true,
          "bucket_domain_name": true,
          "bucket_regional_domain_name": true,
          "cors_rule": true,
          "grant": true,
          "hosted_zone_id": true,
          "id": true,
          "lifecycle_rule": true,
          "logging": true,
          "object_lock_configuration": true,
          "object_lock_enabled": true,
          "policy": true,
          "region": true,
          "replication_configuration": true,
          "request_payer": true,
          "server_side_encryption_configuration": true,
          "tags_all": true,
          "versioning": true,
          "website": true,
          "website_domain": true,
          "website_endpoint": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cors_rule": [],
          "grant": [],
          "lifecycle_rule": [],
          "logging": [],
          "object_lock_configuration": [],
          "replication_configuration": [],
          "server_side_encryption_configuration": [],
          "tags_all": {},
          "versioning": [],
          "website": []
        }
      }
    },
    {
      "address": "aws_security_group.DBSG",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "DBSG",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Allow ssh  inbound traffic",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            },
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 80,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 80
            }
          ],
          "name": "DBSG",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name_prefix": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.all_worker_mgmt",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "all_worker_mgmt",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "ingress": [
            {
              "cidr_blocks": [
                "10.0.0.0/8",
                "172.16.0.0/12",
                "192.168.0.0/16"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name_prefix": "all_worker_management",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false,
                false,
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false,
                false,
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.application",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "application",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "ingress": [
            {
              "cidr_blocks": [
                "10.0.0.0/8",
                "172.16.0.0/12",
                "192.168.0.0/16"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 65535
            }
          ],
          "name_prefix": "database_mgmt",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false,
                false,
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false,
                false,
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.database",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "database",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "ingress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": true,
              "to_port": 22
            }
          ],
          "name_prefix": "worker_group_mgmt_two",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.general_admin",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "general_admin",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "egress": [
            {
              "cidr_blocks": [
                "0.0.0.0/0"
              ],
              "description": "",
              "from_port": 0,
              "ipv6_cidr_blocks": [
                "::/0"
              ],
              "prefix_list_ids": [],
              "protocol": "-1",
              "security_groups": [],
              "self": false,
              "to_port": 0
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                "10.0.0.0/8"
              ],
              "description": "",
              "from_port": 27017,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 27017
            },
            {
              "cidr_blocks": [
                "69.249.56.91/32"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name_prefix": "general_admin",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [
                false
              ],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [
                false
              ],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            },
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.worker_group_mgmt_one",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "worker_group_mgmt_one",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "ingress": [
            {
              "cidr_blocks": [
                "10.0.0.0/8"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name_prefix": "worker_group_mgmt_one",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_security_group.worker_group_mgmt_two",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "worker_group_mgmt_two",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Managed by Terraform",
          "ingress": [
            {
              "cidr_blocks": [
                "192.168.0.0/16"
              ],
              "description": "",
              "from_port": 22,
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "protocol": "tcp",
              "security_groups": [],
              "self": false,
              "to_port": 22
            }
          ],
          "name_prefix": "worker_group_mgmt_two",
          "revoke_rules_on_delete": false,
          "tags": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "name": true,
          "owner_id": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [
            {
              "cidr_blocks": [
                false
              ],
              "ipv6_cidr_blocks": [],
              "prefix_list_ids": [],
              "security_groups": []
            }
          ],
          "tags_all": {}
        }
      }
    },
    {
      "address": "aws_volume_attachment.ebs_att[0]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_att",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdh1",
          "force_detach": null,
          "skip_destroy": true,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_volume_attachment.ebs_att[1]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_att",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdh2",
          "force_detach": null,
          "skip_destroy": true,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_volume_attachment.ebs_att[2]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_att",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdh3",
          "force_detach": null,
          "skip_destroy": true,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "aws_volume_attachment.ebs_att[3]",
      "mode": "managed",
      "type": "aws_volume_attachment",
      "name": "ebs_att",
      "index": 3,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "device_name": "/dev/sdh4",
          "force_detach": null,
          "skip_destroy": true,
          "stop_instance_before_detaching": null,
          "timeouts": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "volume_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "data.aws_eks_cluster.cluster",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "arn": true,
          "certificate_authority": true,
          "created_at": true,
          "enabled_cluster_log_types": true,
          "endpoint": true,
          "id": true,
          "identity": true,
          "kubernetes_network_config": true,
          "name": true,
          "platform_version": true,
          "role_arn": true,
          "status": true,
          "tags": true,
          "version": true,
          "vpc_config": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "certificate_authority": [],
          "enabled_cluster_log_types": [],
          "identity": [],
          "kubernetes_network_config": [],
          "tags": {},
          "vpc_config": []
        }
      }
    },
    {
      "address": "data.aws_eks_cluster_auth.cluster",
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "id": true,
          "name": true,
          "token": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "token": true
        }
      }
    },
    {
      "address": "module.eks.aws_autoscaling_group.workers[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capacity_rebalance": false,
          "context": null,
          "default_instance_warmup": null,
          "desired_capacity": 2,
          "enabled_metrics": null,
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 300,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": null,
          "max_instance_lifetime": 0,
          "max_size": 3,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 1,
          "mixed_instances_policy": [],
          "placement_group": null,
          "protect_from_scale_in": false,
          "suspended_processes": [
            "AZRebalance"
          ],
          "tag": [
            {
              "key": "Environment",
              "propagate_at_launch": true,
              "value": "training"
            },
            {
              "key": "GithubOrg",
              "propagate_at_launch": true,
              "value": "terraform-aws-modules"
            },
            {
              "key": "GithubRepo",
              "propagate_at_launch": true,
              "value": "terraform-aws-eks"
            },
            {
              "key": "Name",
              "propagate_at_launch": true
            },
            {
              "propagate_at_launch": true,
              "value": "owned"
            },
            {
              "propagate_at_launch": true,
              "value": "owned"
            }
          ],
          "tags": null,
          "target_group_arns": null,
          "termination_policies": [],
          "timeouts": null,
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after_unknown": {
          "arn": true,
          "availability_zones": true,
          "default_cooldown": true,
          "health_check_type": true,
          "id": true,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": true,
          "launch_template": [],
          "mixed_instances_policy": [],
          "name": true,
          "name_prefix": true,
          "service_linked_role_arn": true,
          "suspended_processes": [
            false
          ],
          "tag": [
            {},
            {},
            {},
            {
              "value": true
            },
            {
              "key": true
            },
            {
              "key": true
            }
          ],
          "termination_policies": [],
          "vpc_zone_identifier": true,
          "warm_pool": []
        },
        "before_sensitive": false,
        "after_sensitive": {
          "availability_zones": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "mixed_instances_policy": [],
          "suspended_processes": [
            false
          ],
          "tag": [
            {},
            {},
            {},
            {},
            {},
            {}
          ],
          "termination_policies": [],
          "vpc_zone_identifier": [],
          "warm_pool": []
        }
      }
    },
    {
      "address": "module.eks.aws_autoscaling_group.workers[1]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capacity_rebalance": false,
          "context": null,
          "default_instance_warmup": null,
          "desired_capacity": 1,
          "enabled_metrics": null,
          "force_delete": false,
          "force_delete_warm_pool": false,
          "health_check_grace_period": 300,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "load_balancers": null,
          "max_instance_lifetime": 0,
          "max_size": 3,
          "metrics_granularity": "1Minute",
          "min_elb_capacity": null,
          "min_size": 1,
          "mixed_instances_policy": [],
          "placement_group": null,
          "protect_from_scale_in": false,
          "suspended_processes": [
            "AZRebalance"
          ],
          "tag": [
            {
              "key": "Environment",
              "propagate_at_launch": true,
              "value": "training"
            },
            {
              "key": "GithubOrg",
              "propagate_at_launch": true,
              "value": "terraform-aws-modules"
            },
            {
              "key": "GithubRepo",
              "propagate_at_launch": true,
              "value": "terraform-aws-eks"
            },
            {
              "key": "Name",
              "propagate_at_launch": true
            },
            {
              "propagate_at_launch": true,
              "value": "owned"
            },
            {
              "propagate_at_launch": true,
              "value": "owned"
            }
          ],
          "tags": null,
          "target_group_arns": null,
          "termination_policies": [],
          "timeouts": null,
          "wait_for_capacity_timeout": "10m",
          "wait_for_elb_capacity": null,
          "warm_pool": []
        },
        "after_unknown": {
          "arn": true,
          "availability_zones": true,
          "default_cooldown": true,
          "health_check_type": true,
          "id": true,
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_configuration": true,
          "launch_template": [],
          "mixed_instances_policy": [],
          "name": true,
          "name_prefix": true,
          "service_linked_role_arn": true,
          "suspended_processes": [
            false
          ],
          "tag": [
            {},
            {},
            {},
            {
              "value": true
            },
            {
              "key": true
            },
            {
              "key": true
            }
          ],
          "termination_policies": [],
          "vpc_zone_identifier": true,
          "warm_pool": []
        },
        "before_sensitive": false,
        "after_sensitive": {
          "availability_zones": [],
          "initial_lifecycle_hook": [],
          "instance_refresh": [],
          "launch_template": [],
          "mixed_instances_policy": [],
          "suspended_processes": [
            false
          ],
          "tag": [
            {},
            {},
            {},
            {},
            {},
            {}
          ],
          "termination_policies": [],
          "vpc_zone_identifier": [],
          "warm_pool": []
        }
      }
    },
    {
      "address": "module.eks.aws_eks_cluster.this[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "enabled_cluster_log_types": null,
          "encryption_config": [],
          "kubernetes_network_config": [
            {}
          ],
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "timeouts": {
            "create": "30m",
            "delete": "15m",
            "update": "60m"
          },
          "version": "1.20",
          "vpc_config": [
            {
              "endpoint_private_access": false,
              "endpoint_public_access": true,
              "public_access_cidrs": [
                "0.0.0.0/0"
              ]
            }
          ]
        },
        "after_unknown": {
          "arn": true,
          "certificate_authority": true,
          "created_at": true,
          "encryption_config": [],
          "endpoint": true,
          "id": true,
          "identity": true,
          "kubernetes_network_config": [
            {
              "ip_family": true,
              "service_ipv4_cidr": true
            }
          ],
          "name": true,
          "platform_version": true,
          "role_arn": true,
          "status": true,
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_config": [
            {
              "cluster_security_group_id": true,
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": true,
              "subnet_ids": true,
              "vpc_id": true
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "certificate_authority": [],
          "encryption_config": [],
          "identity": [],
          "kubernetes_network_config": [
            {}
          ],
          "tags": {},
          "tags_all": {},
          "timeouts": {},
          "vpc_config": [
            {
              "public_access_cidrs": [
                false
              ],
              "security_group_ids": [],
              "subnet_ids": []
            }
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_iam_instance_profile.workers[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "path": "/",
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name": true,
          "name_prefix": true,
          "role": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_instance_profile.workers[1]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "path": "/",
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "name": true,
          "name_prefix": true,
          "role": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_policy.cluster_deny_log_group[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_deny_log_group",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Deny CreateLogGroup",
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "name": true,
          "name_prefix": true,
          "policy_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_policy.cluster_elb_sl_role_creation[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_elb_sl_role_creation",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role",
          "path": "/",
          "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "name": true,
          "name_prefix": true,
          "policy_id": true,
          "tags": {},
          "tags_all": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role.cluster[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": true,
          "max_session_duration": 3600,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name": true,
          "name_prefix": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role.workers[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSWorkerAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "description": null,
          "force_detach_policies": true,
          "max_session_duration": 3600,
          "path": "/",
          "permissions_boundary": null,
          "tags": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          },
          "tags_all": {
            "Environment": "training",
            "GithubOrg": "terraform-aws-modules",
            "GithubRepo": "terraform-aws-eks"
          }
        },
        "after_unknown": {
          "arn": true,
          "create_date": true,
          "id": true,
          "inline_policy": true,
          "managed_policy_arns": true,
          "name": true,
          "name_prefix": true,
          "tags": {},
          "tags_all": {},
          "unique_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "inline_policy": [],
          "managed_policy_arns": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.cluster_deny_log_group[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_deny_log_group",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "id": true,
          "policy_arn": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.cluster_elb_sl_role_creation[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_elb_sl_role_creation",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {},
        "after_unknown": {
          "id": true,
          "policy_arn": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        },
        "after_unknown": {
          "id": true,
          "role": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_launch_configuration.workers[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "associate_public_ip_address": false,
          "ebs_optimized": false,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "image_id": "ami-0f9112de1cc4579fb",
          "instance_type": "t2.small",
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_tokens": "optional"
            }
          ],
          "placement_tenancy": "",
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": false,
              "iops": 0,
              "volume_size": 100,
              "volume_type": "gp2"
            }
          ],
          "spot_price": "",
          "user_data": null,
          "vpc_classic_link_id": null,
          "vpc_classic_link_security_groups": null
        },
        "after_unknown": {
          "arn": true,
          "ebs_block_device": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": true,
          "id": true,
          "key_name": true,
          "metadata_options": [
            {
              "http_put_response_hop_limit": true
            }
          ],
          "name": true,
          "name_prefix": true,
          "root_block_device": [
            {
              "throughput": true
            }
          ],
          "security_groups": true,
          "user_data_base64": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [
            {}
          ],
          "root_block_device": [
            {}
          ],
          "security_groups": []
        }
      }
    },
    {
      "address": "module.eks.aws_launch_configuration.workers[1]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "associate_public_ip_address": false,
          "ebs_optimized": false,
          "enable_monitoring": true,
          "ephemeral_block_device": [],
          "image_id": "ami-0f9112de1cc4579fb",
          "instance_type": "t2.medium",
          "metadata_options": [
            {
              "http_endpoint": "enabled",
              "http_tokens": "optional"
            }
          ],
          "placement_tenancy": "",
          "root_block_device": [
            {
              "delete_on_termination": true,
              "encrypted": false,
              "iops": 0,
              "volume_size": 100,
              "volume_type": "gp2"
            }
          ],
          "spot_price": "",
          "user_data": null,
          "vpc_classic_link_id": null,
          "vpc_classic_link_security_groups": null
        },
        "after_unknown": {
          "arn": true,
          "ebs_block_device": true,
          "ephemeral_block_device": [],
          "iam_instance_profile": true,
          "id": true,
          "key_name": true,
          "metadata_options": [
            {
              "http_put_response_hop_limit": true
            }
          ],
          "name": true,
          "name_prefix": true,
          "root_block_device": [
            {
              "throughput": true
            }
          ],
          "security_groups": true,
          "user_data_base64": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "ebs_block_device": [],
          "ephemeral_block_device": [],
          "metadata_options": [
            {}
          ],
          "root_block_device": [
            {}
          ],
          "security_groups": []
        }
      }
    },
    {
      "address": "module.eks.aws_security_group.cluster[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "EKS cluster security group.",
          "revoke_rules_on_delete": false,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "name_prefix": true,
          "owner_id": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_security_group.workers[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "description": "Security group for all nodes in the cluster.",
          "revoke_rules_on_delete": false,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "egress": true,
          "id": true,
          "ingress": true,
          "name": true,
          "name_prefix": true,
          "owner_id": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.cluster_egress_internet[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow cluster egress access to the Internet.",
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "-1",
          "self": false,
          "timeouts": null,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.cluster_https_worker_ingress[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": "Allow pods to communicate with the EKS cluster API.",
          "from_port": 443,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.workers_egress_internet[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": [
            "0.0.0.0/0"
          ],
          "description": "Allow nodes all egress to the Internet.",
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "-1",
          "self": false,
          "timeouts": null,
          "to_port": 0,
          "type": "egress"
        },
        "after_unknown": {
          "cidr_blocks": [
            false
          ],
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "cidr_blocks": [
            false
          ]
        }
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.workers_ingress_cluster[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": "Allow workers pods to receive communication from the cluster control plane.",
          "from_port": 1025,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "timeouts": null,
          "to_port": 65535,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.workers_ingress_cluster_https[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
          "from_port": 443,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "tcp",
          "self": false,
          "timeouts": null,
          "to_port": 443,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.aws_security_group_rule.workers_ingress_self[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "cidr_blocks": null,
          "description": "Allow node to communicate with each other.",
          "from_port": 0,
          "ipv6_cidr_blocks": null,
          "prefix_list_ids": null,
          "protocol": "-1",
          "self": false,
          "timeouts": null,
          "to_port": 65535,
          "type": "ingress"
        },
        "after_unknown": {
          "id": true,
          "security_group_id": true,
          "source_security_group_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.eks.data.http.wait_for_cluster[0]",
      "module_address": "module.eks",
      "mode": "data",
      "type": "http",
      "name": "wait_for_cluster",
      "index": 0,
      "provider_name": "registry.terraform.io/terraform-aws-modules/http",
      "change": {
        "actions": [
          "read"
        ],
        "before": null,
        "after": {
          "insecure": null,
          "request_headers": null,
          "timeout": 300
        },
        "after_unknown": {
          "body": true,
          "ca_certificate": true,
          "id": true,
          "response_headers": true,
          "url": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "response_headers": {}
        }
      }
    },
    {
      "address": "module.eks.kubernetes_config_map.aws_auth[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "aws_auth",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/kubernetes",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "binary_data": null,
          "metadata": [
            {
              "annotations": null,
              "generate_name": null,
              "labels": {
                "app.kubernetes.io/managed-by": "Terraform",
                "terraform.io/module": "terraform-aws-modules.eks.aws"
              },
              "name": "aws-auth",
              "namespace": "kube-system"
            }
          ]
        },
        "after_unknown": {
          "data": true,
          "id": true,
          "metadata": [
            {
              "generation": true,
              "labels": {},
              "resource_version": true,
              "uid": true
            }
          ]
        },
        "before_sensitive": false,
        "after_sensitive": {
          "data": {},
          "metadata": [
            {
              "labels": {}
            }
          ]
        }
      }
    },
    {
      "address": "module.eks.local_file.kubeconfig[0]",
      "module_address": "module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/local",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "content_base64": null,
          "directory_permission": "0755",
          "file_permission": "0600",
          "sensitive_content": null,
          "source": null
        },
        "after_unknown": {
          "content": true,
          "filename": true,
          "id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "sensitive_content": true
        }
      }
    },
    {
      "address": "module.vpc.aws_eip.nat[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "address": null,
          "associate_with_private_ip": null,
          "customer_owned_ipv4_pool": null,
          "timeouts": null,
          "vpc": true
        },
        "after_unknown": {
          "allocation_id": true,
          "association_id": true,
          "carrier_ip": true,
          "customer_owned_ip": true,
          "domain": true,
          "id": true,
          "instance": true,
          "network_border_group": true,
          "network_interface": true,
          "private_dns": true,
          "private_ip": true,
          "public_dns": true,
          "public_ip": true,
          "public_ipv4_pool": true,
          "tags": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_internet_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_nat_gateway.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "connectivity_type": "public"
        },
        "after_unknown": {
          "allocation_id": true,
          "id": true,
          "network_interface_id": true,
          "private_ip": true,
          "public_ip": true,
          "subnet_id": true,
          "tags": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.private_nat_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "gateway_id": null,
          "local_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "nat_gateway_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route.public_internet_gateway[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "carrier_gateway_id": null,
          "core_network_arn": null,
          "destination_cidr_block": "0.0.0.0/0",
          "destination_ipv6_cidr_block": null,
          "destination_prefix_list_id": null,
          "egress_only_gateway_id": null,
          "local_gateway_id": null,
          "nat_gateway_id": null,
          "timeouts": {
            "create": "5m",
            "delete": null,
            "update": null
          },
          "transit_gateway_id": null,
          "vpc_endpoint_id": null,
          "vpc_peering_connection_id": null
        },
        "after_unknown": {
          "gateway_id": true,
          "id": true,
          "instance_id": true,
          "instance_owner_id": true,
          "network_interface_id": true,
          "origin": true,
          "route_table_id": true,
          "state": true,
          "timeouts": {}
        },
        "before_sensitive": false,
        "after_sensitive": {
          "timeouts": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "id": true,
          "owner_id": true,
          "propagating_vgws": true,
          "route": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "propagating_vgws": [],
          "route": [],
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_route_table_association.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "gateway_id": null
        },
        "after_unknown": {
          "id": true,
          "route_table_id": true,
          "subnet_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "cidr_block": "10.0.1.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "cidr_block": "10.0.2.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.private[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "cidr_block": "10.0.3.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": false,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1a",
          "cidr_block": "10.0.4.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": true,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[1]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 1,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1b",
          "cidr_block": "10.0.5.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": true,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_subnet.public[2]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "index": 2,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_ipv6_address_on_creation": false,
          "availability_zone": "us-east-1c",
          "cidr_block": "10.0.6.0/24",
          "customer_owned_ipv4_pool": null,
          "enable_dns64": false,
          "enable_resource_name_dns_a_record_on_launch": false,
          "enable_resource_name_dns_aaaa_record_on_launch": false,
          "ipv6_cidr_block": null,
          "ipv6_native": false,
          "map_customer_owned_ip_on_launch": null,
          "map_public_ip_on_launch": true,
          "outpost_arn": null,
          "timeouts": null
        },
        "after_unknown": {
          "arn": true,
          "availability_zone_id": true,
          "id": true,
          "ipv6_cidr_block_association_id": true,
          "owner_id": true,
          "private_dns_hostname_type_on_launch": true,
          "tags": true,
          "tags_all": true,
          "vpc_id": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.vpc.aws_vpc.this[0]",
      "module_address": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "index": 0,
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "assign_generated_ipv6_cidr_block": false,
          "cidr_block": "10.0.0.0/16",
          "enable_dns_hostnames": true,
          "enable_dns_support": true,
          "instance_tenancy": "default",
          "ipv4_ipam_pool_id": null,
          "ipv4_netmask_length": null,
          "ipv6_ipam_pool_id": null,
          "ipv6_netmask_length": null
        },
        "after_unknown": {
          "arn": true,
          "default_network_acl_id": true,
          "default_route_table_id": true,
          "default_security_group_id": true,
          "dhcp_options_id": true,
          "enable_classiclink": true,
          "enable_classiclink_dns_support": true,
          "id": true,
          "ipv6_association_id": true,
          "ipv6_cidr_block": true,
          "ipv6_cidr_block_network_border_group": true,
          "main_route_table_id": true,
          "owner_id": true,
          "tags": true,
          "tags_all": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "module.wiz.aws_cloudformation_stack.wiz",
      "module_address": "module.wiz",
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "wiz",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "capabilities": [
            "CAPABILITY_NAMED_IAM"
          ],
          "disable_rollback": null,
          "iam_role_arn": null,
          "name": "wiz-security",
          "notification_arns": null,
          "on_failure": null,
          "parameters": {
            "ExternalId": "145cc1fc-3303-483f-a5e3-7a253e36127e",
            "WizRoleName": "WizAccess-Role"
          },
          "policy_url": null,
          "tags": {
            "name": "wiz"
          },
          "tags_all": {
            "name": "wiz"
          },
          "template_url": "https://wizio-public.s3.amazonaws.com/deployment-v2/aws/wiz-aws-standard-prod4test.json",
          "timeout_in_minutes": null,
          "timeouts": null
        },
        "after_unknown": {
          "capabilities": [
            false
          ],
          "id": true,
          "outputs": true,
          "parameters": {},
          "policy_body": true,
          "tags": {},
          "tags_all": {},
          "template_body": true
        },
        "before_sensitive": false,
        "after_sensitive": {
          "capabilities": [
            false
          ],
          "outputs": {},
          "parameters": {},
          "tags": {},
          "tags_all": {}
        }
      }
    },
    {
      "address": "random_string.suffix",
      "mode": "managed",
      "type": "random_string",
      "name": "suffix",
      "provider_name": "registry.terraform.io/hashicorp/random",
      "change": {
        "actions": [
          "create"
        ],
        "before": null,
        "after": {
          "keepers": null,
          "length": 8,
          "lower": true,
          "min_lower": 0,
          "min_numeric": 0,
          "min_special": 0,
          "min_upper": 0,
          "number": true,
          "override_special": null,
          "special": false,
          "upper": true
        },
        "after_unknown": {
          "id": true,
          "result": true
        },
        "before_sensitive": false,
        "after_sensitive": {}
      }
    }
  ],
  "output_changes": {
    "cluster_endpoint": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_name": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "cluster_security_group_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "config_map_aws_auth": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "kubectl_config": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "region": {
      "actions": [
        "create"
      ],
      "before": null,
      "after": "us-east-1",
      "after_unknown": false,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "wiz_connector_arn": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    },
    "wiz_external_id": {
      "actions": [
        "create"
      ],
      "before": null,
      "after_unknown": true,
      "before_sensitive": false,
      "after_sensitive": false
    }
  },
  "prior_state": {
    "format_version": "1.0",
    "terraform_version": "1.1.6",
    "values": {
      "outputs": {
        "region": {
          "sensitive": false,
          "value": "us-east-1"
        }
      },
      "root_module": {
        "resources": [
          {
            "address": "data.aws_availability_zones.available",
            "mode": "data",
            "type": "aws_availability_zones",
            "name": "available",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "schema_version": 0,
            "values": {
              "all_availability_zones": null,
              "exclude_names": null,
              "exclude_zone_ids": null,
              "filter": null,
              "group_names": [
                "us-east-1"
              ],
              "id": "us-east-1",
              "names": [
                "us-east-1a",
                "us-east-1b",
                "us-east-1c",
                "us-east-1d",
                "us-east-1e",
                "us-east-1f"
              ],
              "state": null,
              "timeouts": null,
              "zone_ids": [
                "use1-az2",
                "use1-az4",
                "use1-az6",
                "use1-az1",
                "use1-az3",
                "use1-az5"
              ]
            },
            "sensitive_values": {
              "group_names": [
                false
              ],
              "names": [
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "zone_ids": [
                false,
                false,
                false,
                false,
                false,
                false
              ]
            }
          }
        ],
        "child_modules": [
          {
            "resources": [
              {
                "address": "module.eks.data.aws_ami.eks_worker[0]",
                "mode": "data",
                "type": "aws_ami",
                "name": "eks_worker",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "architecture": "x86_64",
                  "arn": "arn:aws:ec2:us-east-1::image/ami-0f9112de1cc4579fb",
                  "block_device_mappings": [
                    {
                      "device_name": "/dev/xvda",
                      "ebs": {
                        "delete_on_termination": "true",
                        "encrypted": "false",
                        "iops": "0",
                        "snapshot_id": "snap-0e9cd877ed59b37d9",
                        "throughput": "0",
                        "volume_size": "20",
                        "volume_type": "gp2"
                      },
                      "no_device": "",
                      "virtual_name": ""
                    }
                  ],
                  "boot_mode": "",
                  "creation_date": "2022-08-24T05:59:00.000Z",
                  "deprecation_time": "2024-08-24T05:59:00.000Z",
                  "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.20.15, docker: 20.10.17-1.amzn2, containerd: 1.6.6-1.amzn2)",
                  "ena_support": true,
                  "executable_users": null,
                  "filter": [
                    {
                      "name": "name",
                      "values": [
                        "amazon-eks-node-1.20-v*"
                      ]
                    }
                  ],
                  "hypervisor": "xen",
                  "id": "ami-0f9112de1cc4579fb",
                  "image_id": "ami-0f9112de1cc4579fb",
                  "image_location": "amazon/amazon-eks-node-1.20-v20220824",
                  "image_owner_alias": "amazon",
                  "image_type": "machine",
                  "include_deprecated": false,
                  "kernel_id": "",
                  "most_recent": true,
                  "name": "amazon-eks-node-1.20-v20220824",
                  "name_regex": null,
                  "owner_id": "602401143452",
                  "owners": [
                    "amazon"
                  ],
                  "platform": "",
                  "platform_details": "Linux/UNIX",
                  "product_codes": [],
                  "public": true,
                  "ramdisk_id": "",
                  "root_device_name": "/dev/xvda",
                  "root_device_type": "ebs",
                  "root_snapshot_id": "snap-0e9cd877ed59b37d9",
                  "sriov_net_support": "simple",
                  "state": "available",
                  "state_reason": {
                    "code": "UNSET",
                    "message": "UNSET"
                  },
                  "tags": {},
                  "timeouts": null,
                  "tpm_support": "",
                  "usage_operation": "RunInstances",
                  "virtualization_type": "hvm"
                },
                "sensitive_values": {
                  "block_device_mappings": [
                    {
                      "ebs": {}
                    }
                  ],
                  "filter": [
                    {
                      "values": [
                        false
                      ]
                    }
                  ],
                  "owners": [
                    false
                  ],
                  "product_codes": [],
                  "state_reason": {},
                  "tags": {}
                }
              },
              {
                "address": "module.eks.data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "account_id": "072579879877",
                  "arn": "arn:aws:iam::072579879877:user/s_taylor",
                  "id": "072579879877",
                  "user_id": "AIDARBZQZCPCRV4V73VE2"
                },
                "sensitive_values": {}
              },
              {
                "address": "module.eks.data.aws_iam_policy_document.cluster_assume_role_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_assume_role_policy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "2764486067",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "sts:AssumeRole"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "eks.amazonaws.com"
                          ],
                          "type": "Service"
                        }
                      ],
                      "resources": [],
                      "sid": "EKSClusterAssumeRole"
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    }
                  ]
                }
              },
              {
                "address": "module.eks.data.aws_iam_policy_document.cluster_deny_log_group[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_deny_log_group",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "2675893060",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:CreateLogGroup\",\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "logs:CreateLogGroup"
                      ],
                      "condition": [],
                      "effect": "Deny",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        "*"
                      ],
                      "sid": ""
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        false
                      ]
                    }
                  ]
                }
              },
              {
                "address": "module.eks.data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_elb_sl_role_creation",
                "index": 0,
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "3709839417",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "ec2:DescribeAccountAttributes",
                        "ec2:DescribeAddresses",
                        "ec2:DescribeInternetGateways"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        "*"
                      ],
                      "sid": ""
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false,
                        false,
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [],
                      "resources": [
                        false
                      ]
                    }
                  ]
                }
              },
              {
                "address": "module.eks.data.aws_iam_policy_document.workers_assume_role_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "workers_assume_role_policy",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "id": "3778018924",
                  "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
                  "override_json": null,
                  "override_policy_documents": null,
                  "policy_id": null,
                  "source_json": null,
                  "source_policy_documents": null,
                  "statement": [
                    {
                      "actions": [
                        "sts:AssumeRole"
                      ],
                      "condition": [],
                      "effect": "Allow",
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            "ec2.amazonaws.com"
                          ],
                          "type": "Service"
                        }
                      ],
                      "resources": [],
                      "sid": "EKSWorkerAssumeRole"
                    }
                  ],
                  "version": "2012-10-17"
                },
                "sensitive_values": {
                  "statement": [
                    {
                      "actions": [
                        false
                      ],
                      "condition": [],
                      "not_actions": [],
                      "not_principals": [],
                      "not_resources": [],
                      "principals": [
                        {
                          "identifiers": [
                            false
                          ]
                        }
                      ],
                      "resources": []
                    }
                  ]
                }
              },
              {
                "address": "module.eks.data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_name": "registry.terraform.io/hashicorp/aws",
                "schema_version": 0,
                "values": {
                  "dns_suffix": "amazonaws.com",
                  "id": "aws",
                  "partition": "aws",
                  "reverse_dns_prefix": "com.amazonaws"
                },
                "sensitive_values": {}
              }
            ],
            "address": "module.eks",
            "child_modules": [
              {
                "resources": [
                  {
                    "address": "module.eks.module.fargate.data.aws_partition.current",
                    "mode": "data",
                    "type": "aws_partition",
                    "name": "current",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                      "dns_suffix": "amazonaws.com",
                      "id": "aws",
                      "partition": "aws",
                      "reverse_dns_prefix": "com.amazonaws"
                    },
                    "sensitive_values": {}
                  }
                ],
                "address": "module.eks.module.fargate"
              }
            ]
          }
        ]
      }
    }
  },
  "configuration": {
    "provider_config": {
      "aws": {
        "name": "aws",
        "version_constraint": ">= 3.20.0",
        "expressions": {
          "region": {
            "references": [
              "var.region"
            ]
          }
        }
      },
      "kubernetes": {
        "name": "kubernetes",
        "version_constraint": ">= 2.0.1",
        "expressions": {
          "cluster_ca_certificate": {
            "references": [
              "data.aws_eks_cluster.cluster.certificate_authority[0].data",
              "data.aws_eks_cluster.cluster.certificate_authority[0]",
              "data.aws_eks_cluster.cluster.certificate_authority",
              "data.aws_eks_cluster.cluster"
            ]
          },
          "host": {
            "references": [
              "data.aws_eks_cluster.cluster.endpoint",
              "data.aws_eks_cluster.cluster"
            ]
          },
          "token": {
            "references": [
              "data.aws_eks_cluster_auth.cluster.token",
              "data.aws_eks_cluster_auth.cluster"
            ]
          }
        }
      },
      "local": {
        "name": "local",
        "version_constraint": "2.1.0"
      },
      "module.eks.module.fargate:aws": {
        "name": "aws",
        "version_constraint": ">= 3.56.0",
        "module_address": "module.eks.module.fargate"
      },
      "module.eks.module.node_groups:aws": {
        "name": "aws",
        "version_constraint": ">= 3.56.0",
        "module_address": "module.eks.module.node_groups"
      },
      "module.eks.module.node_groups:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks.module.node_groups"
      },
      "module.eks:aws": {
        "name": "aws",
        "version_constraint": ">= 3.56.0",
        "module_address": "module.eks"
      },
      "module.eks:cloudinit": {
        "name": "cloudinit",
        "version_constraint": ">= 2.0.0",
        "module_address": "module.eks"
      },
      "module.eks:http": {
        "name": "http",
        "version_constraint": ">= 2.4.1",
        "module_address": "module.eks"
      },
      "module.eks:kubernetes": {
        "name": "kubernetes",
        "version_constraint": ">= 1.11.1",
        "module_address": "module.eks"
      },
      "module.eks:local": {
        "name": "local",
        "version_constraint": ">= 1.4.0",
        "module_address": "module.eks"
      },
      "module.vpc:aws": {
        "name": "aws",
        "version_constraint": ">= 3.15.0",
        "module_address": "module.vpc"
      },
      "null": {
        "name": "null",
        "version_constraint": "3.1.0"
      },
      "random": {
        "name": "random",
        "version_constraint": "3.1.0"
      }
    },
    "root_module": {
      "outputs": {
        "cluster_endpoint": {
          "expression": {
            "references": [
              "module.eks.cluster_endpoint",
              "module.eks"
            ]
          },
          "description": "Endpoint for EKS control plane."
        },
        "cluster_id": {
          "expression": {
            "references": [
              "module.eks.cluster_id",
              "module.eks"
            ]
          },
          "description": "EKS cluster ID."
        },
        "cluster_name": {
          "expression": {
            "references": [
              "local.cluster_name"
            ]
          },
          "description": "Kubernetes Cluster Name"
        },
        "cluster_security_group_id": {
          "expression": {
            "references": [
              "module.eks.cluster_security_group_id",
              "module.eks"
            ]
          },
          "description": "Security group ids attached to the cluster control plane."
        },
        "config_map_aws_auth": {
          "expression": {
            "references": [
              "module.eks.config_map_aws_auth",
              "module.eks"
            ]
          },
          "description": "A kubernetes configuration to authenticate to this EKS cluster."
        },
        "kubectl_config": {
          "expression": {
            "references": [
              "module.eks.kubeconfig",
              "module.eks"
            ]
          },
          "description": "kubectl config as generated by the module."
        },
        "region": {
          "expression": {
            "references": [
              "var.region"
            ]
          },
          "description": "AWS region"
        },
        "wiz_connector_arn": {
          "expression": {
            "references": [
              "module.wiz.wiz_role_iam",
              "module.wiz"
            ]
          }
        },
        "wiz_external_id": {
          "expression": {
            "references": [
              "module.wiz.wiz_external_id",
              "module.wiz"
            ]
          }
        }
      },
      "resources": [
        {
          "address": "aws_ebs_volume.mongovol",
          "mode": "managed",
          "type": "aws_ebs_volume",
          "name": "mongovol",
          "provider_config_key": "aws",
          "expressions": {
            "availability_zone": {
              "constant_value": "us-east-1a"
            },
            "size": {
              "constant_value": 4
            },
            "tags": {
              "references": [
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "constant_value": 4
          }
        },
        {
          "address": "aws_eip.mongoeip",
          "mode": "managed",
          "type": "aws_eip",
          "name": "mongoeip",
          "provider_config_key": "aws",
          "expressions": {
            "instance": {
              "references": [
                "aws_instance.mongodb.id",
                "aws_instance.mongodb"
              ]
            },
            "vpc": {
              "constant_value": true
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_instance_profile.mongo_profile",
          "mode": "managed",
          "type": "aws_iam_instance_profile",
          "name": "mongo_profile",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "constant_value": "allow-mongo-ec2"
            },
            "role": {
              "references": [
                "aws_iam_role.wizrole.name",
                "aws_iam_role.wizrole"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_policy.wizpolicy",
          "mode": "managed",
          "type": "aws_iam_policy",
          "name": "wizpolicy",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "constant_value": "WizAllowEC2All"
            },
            "policy": {
              "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"ec2:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role.wizrole",
          "mode": "managed",
          "type": "aws_iam_role",
          "name": "wizrole",
          "provider_config_key": "aws",
          "expressions": {
            "assume_role_policy": {
              "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
            },
            "name": {
              "constant_value": "WizRole"
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_iam_role_policy_attachment.wiz-attach",
          "mode": "managed",
          "type": "aws_iam_role_policy_attachment",
          "name": "wiz-attach",
          "provider_config_key": "aws",
          "expressions": {
            "policy_arn": {
              "references": [
                "aws_iam_policy.wizpolicy.arn",
                "aws_iam_policy.wizpolicy"
              ]
            },
            "role": {
              "references": [
                "aws_iam_role.wizrole.name",
                "aws_iam_role.wizrole"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_instance.mongodb",
          "mode": "managed",
          "type": "aws_instance",
          "name": "mongodb",
          "provider_config_key": "aws",
          "expressions": {
            "ami": {
              "constant_value": "ami-0023040df18933030"
            },
            "iam_instance_profile": {
              "references": [
                "aws_iam_instance_profile.mongo_profile.name",
                "aws_iam_instance_profile.mongo_profile"
              ]
            },
            "instance_type": {
              "constant_value": "m1.large"
            },
            "key_name": {
              "references": [
                "aws_key_pair.deployer.key_name",
                "aws_key_pair.deployer"
              ]
            },
            "network_interface": [
              {
                "device_index": {
                  "constant_value": 0
                },
                "network_interface_id": {
                  "references": [
                    "aws_network_interface.mongo-eth0.id",
                    "aws_network_interface.mongo-eth0"
                  ]
                }
              }
            ],
            "tags": {
              "constant_value": {
                "Name": "mongo-master",
                "Owner": "Tom"
              }
            },
            "user_data": {
              "references": [
                "path.module"
              ]
            }
          },
          "schema_version": 1,
          "depends_on": [
            "aws_instance.mongodb"
          ]
        },
        {
          "address": "aws_key_pair.deployer",
          "mode": "managed",
          "type": "aws_key_pair",
          "name": "deployer",
          "provider_config_key": "aws",
          "expressions": {
            "key_name": {
              "constant_value": "deployer-key"
            },
            "public_key": {
              "references": [
                "var.my_ssh_public_key"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_network_interface.mongo-eth0",
          "mode": "managed",
          "type": "aws_network_interface",
          "name": "mongo-eth0",
          "provider_config_key": "aws",
          "expressions": {
            "private_ips": {
              "constant_value": [
                "10.0.4.100"
              ]
            },
            "security_groups": {
              "references": [
                "aws_security_group.general_admin.id",
                "aws_security_group.general_admin"
              ]
            },
            "subnet_id": {
              "references": [
                "module.vpc.public_subnets[0]",
                "module.vpc.public_subnets",
                "module.vpc"
              ]
            },
            "tags": {
              "constant_value": {
                "Name": "primary_network_interface"
              }
            }
          },
          "schema_version": 0,
          "depends_on": [
            "module.vpc"
          ]
        },
        {
          "address": "aws_s3_bucket.wizdemo-bucket",
          "mode": "managed",
          "type": "aws_s3_bucket",
          "name": "wizdemo-bucket",
          "provider_config_key": "aws",
          "expressions": {
            "bucket": {
              "references": [
                "var.my_bucket_name"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "aws_security_group.DBSG",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "DBSG",
          "provider_config_key": "aws",
          "expressions": {
            "description": {
              "constant_value": "Allow ssh  inbound traffic"
            },
            "egress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 0,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "-1",
                  "security_groups": null,
                  "self": null,
                  "to_port": 0
                }
              ]
            },
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                },
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 80,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 80
                }
              ]
            },
            "name": {
              "constant_value": "DBSG"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.all_worker_mgmt",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "all_worker_mgmt",
          "provider_config_key": "aws",
          "expressions": {
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                }
              ]
            },
            "name_prefix": {
              "constant_value": "all_worker_management"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.application",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "application",
          "provider_config_key": "aws",
          "expressions": {
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16"
                  ],
                  "description": null,
                  "from_port": 0,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "all",
                  "security_groups": null,
                  "self": null,
                  "to_port": 65535
                }
              ]
            },
            "name_prefix": {
              "constant_value": "database_mgmt"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.database",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "database",
          "provider_config_key": "aws",
          "expressions": {
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": true,
                  "to_port": 22
                }
              ]
            },
            "name_prefix": {
              "constant_value": "worker_group_mgmt_two"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.general_admin",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "general_admin",
          "provider_config_key": "aws",
          "expressions": {
            "egress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "0.0.0.0/0"
                  ],
                  "description": null,
                  "from_port": 0,
                  "ipv6_cidr_blocks": [
                    "::/0"
                  ],
                  "prefix_list_ids": null,
                  "protocol": "-1",
                  "security_groups": null,
                  "self": null,
                  "to_port": 0
                }
              ]
            },
            "ingress": {
              "references": [
                "var.my_ip_address"
              ]
            },
            "name_prefix": {
              "constant_value": "general_admin"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.worker_group_mgmt_one",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "worker_group_mgmt_one",
          "provider_config_key": "aws",
          "expressions": {
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "10.0.0.0/8"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                }
              ]
            },
            "name_prefix": {
              "constant_value": "worker_group_mgmt_one"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_security_group.worker_group_mgmt_two",
          "mode": "managed",
          "type": "aws_security_group",
          "name": "worker_group_mgmt_two",
          "provider_config_key": "aws",
          "expressions": {
            "ingress": {
              "constant_value": [
                {
                  "cidr_blocks": [
                    "192.168.0.0/16"
                  ],
                  "description": null,
                  "from_port": 22,
                  "ipv6_cidr_blocks": null,
                  "prefix_list_ids": null,
                  "protocol": "tcp",
                  "security_groups": null,
                  "self": null,
                  "to_port": 22
                }
              ]
            },
            "name_prefix": {
              "constant_value": "worker_group_mgmt_two"
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            }
          },
          "schema_version": 1
        },
        {
          "address": "aws_volume_attachment.ebs_att",
          "mode": "managed",
          "type": "aws_volume_attachment",
          "name": "ebs_att",
          "provider_config_key": "aws",
          "expressions": {
            "device_name": {
              "references": [
                "count.index"
              ]
            },
            "instance_id": {
              "references": [
                "aws_instance.mongodb.id",
                "aws_instance.mongodb"
              ]
            },
            "skip_destroy": {
              "constant_value": "true"
            },
            "volume_id": {
              "references": [
                "aws_ebs_volume.mongovol",
                "count.index"
              ]
            }
          },
          "schema_version": 0,
          "count_expression": {
            "constant_value": 4
          }
        },
        {
          "address": "random_string.suffix",
          "mode": "managed",
          "type": "random_string",
          "name": "suffix",
          "provider_config_key": "random",
          "expressions": {
            "length": {
              "constant_value": 8
            },
            "special": {
              "constant_value": false
            }
          },
          "schema_version": 1
        },
        {
          "address": "data.aws_availability_zones.available",
          "mode": "data",
          "type": "aws_availability_zones",
          "name": "available",
          "provider_config_key": "aws",
          "schema_version": 0
        },
        {
          "address": "data.aws_eks_cluster.cluster",
          "mode": "data",
          "type": "aws_eks_cluster",
          "name": "cluster",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "module.eks.cluster_id",
                "module.eks"
              ]
            }
          },
          "schema_version": 0
        },
        {
          "address": "data.aws_eks_cluster_auth.cluster",
          "mode": "data",
          "type": "aws_eks_cluster_auth",
          "name": "cluster",
          "provider_config_key": "aws",
          "expressions": {
            "name": {
              "references": [
                "module.eks.cluster_id",
                "module.eks"
              ]
            }
          },
          "schema_version": 0
        }
      ],
      "module_calls": {
        "eks": {
          "source": "terraform-aws-modules/eks/aws",
          "expressions": {
            "cluster_name": {
              "references": [
                "local.cluster_name"
              ]
            },
            "cluster_version": {
              "constant_value": "1.20"
            },
            "subnets": {
              "references": [
                "module.vpc.private_subnets",
                "module.vpc"
              ]
            },
            "tags": {
              "constant_value": {
                "Environment": "training",
                "GithubOrg": "terraform-aws-modules",
                "GithubRepo": "terraform-aws-eks"
              }
            },
            "vpc_id": {
              "references": [
                "module.vpc.vpc_id",
                "module.vpc"
              ]
            },
            "worker_groups": {
              "references": [
                "aws_security_group.worker_group_mgmt_one.id",
                "aws_security_group.worker_group_mgmt_one",
                "aws_security_group.worker_group_mgmt_two.id",
                "aws_security_group.worker_group_mgmt_two"
              ]
            },
            "workers_group_defaults": {
              "constant_value": {
                "root_volume_type": "gp2"
              }
            }
          },
          "module": {
            "outputs": {
              "cloudwatch_log_group_arn": {
                "expression": {
                  "references": [
                    "aws_cloudwatch_log_group.this"
                  ]
                },
                "description": "Arn of cloudwatch log group created"
              },
              "cloudwatch_log_group_name": {
                "expression": {
                  "references": [
                    "aws_cloudwatch_log_group.this"
                  ]
                },
                "description": "Name of cloudwatch log group created"
              },
              "cluster_arn": {
                "expression": {
                  "references": [
                    "local.cluster_arn"
                  ]
                },
                "description": "The Amazon Resource Name (ARN) of the cluster."
              },
              "cluster_certificate_authority_data": {
                "expression": {
                  "references": [
                    "local.cluster_auth_base64"
                  ]
                },
                "description": "Nested attribute containing certificate-authority-data for your cluster. This is the base64 encoded certificate data required to communicate with your cluster."
              },
              "cluster_endpoint": {
                "expression": {
                  "references": [
                    "local.cluster_endpoint"
                  ]
                },
                "description": "The endpoint for your EKS Kubernetes API."
              },
              "cluster_iam_role_arn": {
                "expression": {
                  "references": [
                    "local.cluster_iam_role_arn"
                  ]
                },
                "description": "IAM role ARN of the EKS cluster."
              },
              "cluster_iam_role_name": {
                "expression": {
                  "references": [
                    "local.cluster_iam_role_name"
                  ]
                },
                "description": "IAM role name of the EKS cluster."
              },
              "cluster_id": {
                "expression": {
                  "references": [
                    "local.cluster_id"
                  ]
                },
                "depends_on": [
                  "data.http.wait_for_cluster"
                ],
                "description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready."
              },
              "cluster_oidc_issuer_url": {
                "expression": {
                  "references": [
                    "local.cluster_oidc_issuer_url"
                  ]
                },
                "description": "The URL on the EKS cluster OIDC Issuer"
              },
              "cluster_primary_security_group_id": {
                "expression": {
                  "references": [
                    "local.cluster_primary_security_group_id"
                  ]
                },
                "description": "The cluster primary security group ID created by the EKS cluster on 1.14 or later. Referred to as 'Cluster security group' in the EKS console."
              },
              "cluster_security_group_id": {
                "expression": {
                  "references": [
                    "local.cluster_security_group_id"
                  ]
                },
                "description": "Security group ID attached to the EKS cluster. On 1.14 or later, this is the 'Additional security groups' in the EKS console."
              },
              "cluster_version": {
                "expression": {
                  "references": [
                    "aws_eks_cluster.this"
                  ]
                },
                "description": "The Kubernetes server version for the EKS cluster."
              },
              "config_map_aws_auth": {
                "expression": {
                  "references": [
                    "kubernetes_config_map.aws_auth"
                  ]
                },
                "description": "A kubernetes configuration to authenticate to this EKS cluster."
              },
              "fargate_iam_role_arn": {
                "expression": {
                  "references": [
                    "module.fargate.iam_role_arn",
                    "module.fargate"
                  ]
                },
                "description": "IAM role ARN for EKS Fargate pods"
              },
              "fargate_iam_role_name": {
                "expression": {
                  "references": [
                    "module.fargate.iam_role_name",
                    "module.fargate"
                  ]
                },
                "description": "IAM role name for EKS Fargate pods"
              },
              "fargate_profile_arns": {
                "expression": {
                  "references": [
                    "module.fargate.fargate_profile_arns",
                    "module.fargate"
                  ]
                },
                "description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles."
              },
              "fargate_profile_ids": {
                "expression": {
                  "references": [
                    "module.fargate.fargate_profile_ids",
                    "module.fargate"
                  ]
                },
                "description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:)."
              },
              "kubeconfig": {
                "expression": {
                  "references": [
                    "local.kubeconfig"
                  ]
                },
                "depends_on": [
                  "data.http.wait_for_cluster"
                ],
                "description": "kubectl config file contents for this EKS cluster. Will block on cluster creation until the cluster is really ready."
              },
              "kubeconfig_filename": {
                "expression": {
                  "references": [
                    "local_file.kubeconfig"
                  ]
                },
                "depends_on": [
                  "data.http.wait_for_cluster"
                ],
                "description": "The filename of the generated kubectl config. Will block on cluster creation until the cluster is really ready."
              },
              "node_groups": {
                "expression": {
                  "references": [
                    "module.node_groups.node_groups",
                    "module.node_groups"
                  ]
                },
                "description": "Outputs from EKS node groups. Map of maps, keyed by var.node_groups keys"
              },
              "oidc_provider_arn": {
                "expression": {
                  "references": [
                    "var.enable_irsa",
                    "aws_iam_openid_connect_provider.oidc_provider"
                  ]
                },
                "description": "The ARN of the OIDC Provider if `enable_irsa = true`."
              },
              "security_group_rule_cluster_https_worker_ingress": {
                "expression": {
                  "references": [
                    "aws_security_group_rule.cluster_https_worker_ingress"
                  ]
                },
                "description": "Security group rule responsible for allowing pods to communicate with the EKS cluster API."
              },
              "worker_iam_instance_profile_arns": {
                "expression": {
                  "references": [
                    "aws_iam_instance_profile.workers",
                    "aws_iam_instance_profile.workers_launch_template"
                  ]
                },
                "description": "default IAM instance profile ARN for EKS worker groups"
              },
              "worker_iam_instance_profile_names": {
                "expression": {
                  "references": [
                    "aws_iam_instance_profile.workers",
                    "aws_iam_instance_profile.workers_launch_template"
                  ]
                },
                "description": "default IAM instance profile name for EKS worker groups"
              },
              "worker_iam_role_arn": {
                "expression": {
                  "references": [
                    "aws_iam_role.workers",
                    "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
                    "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile"
                  ]
                },
                "description": "default IAM role ARN for EKS worker groups"
              },
              "worker_iam_role_name": {
                "expression": {
                  "references": [
                    "aws_iam_role.workers",
                    "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
                    "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile"
                  ]
                },
                "description": "default IAM role name for EKS worker groups"
              },
              "worker_security_group_id": {
                "expression": {
                  "references": [
                    "local.worker_security_group_id"
                  ]
                },
                "description": "Security group ID attached to the EKS workers."
              },
              "workers_asg_arns": {
                "expression": {
                  "references": [
                    "aws_autoscaling_group.workers",
                    "aws_autoscaling_group.workers_launch_template"
                  ]
                },
                "description": "IDs of the autoscaling groups containing workers."
              },
              "workers_asg_names": {
                "expression": {
                  "references": [
                    "aws_autoscaling_group.workers",
                    "aws_autoscaling_group.workers_launch_template"
                  ]
                },
                "description": "Names of the autoscaling groups containing workers."
              },
              "workers_default_ami_id": {
                "expression": {
                  "references": [
                    "local.default_ami_id_linux"
                  ]
                },
                "description": "ID of the default worker group AMI"
              },
              "workers_default_ami_id_windows": {
                "expression": {
                  "references": [
                    "local.default_ami_id_windows"
                  ]
                },
                "description": "ID of the default Windows worker group AMI"
              },
              "workers_launch_template_arns": {
                "expression": {
                  "references": [
                    "aws_launch_template.workers_launch_template"
                  ]
                },
                "description": "ARNs of the worker launch templates."
              },
              "workers_launch_template_ids": {
                "expression": {
                  "references": [
                    "aws_launch_template.workers_launch_template"
                  ]
                },
                "description": "IDs of the worker launch templates."
              },
              "workers_launch_template_latest_versions": {
                "expression": {
                  "references": [
                    "aws_launch_template.workers_launch_template"
                  ]
                },
                "description": "Latest versions of the worker launch templates."
              },
              "workers_user_data": {
                "expression": {
                  "references": [
                    "local.launch_configuration_userdata_rendered",
                    "local.launch_template_userdata_rendered"
                  ]
                },
                "description": "User data of worker groups"
              }
            },
            "resources": [
              {
                "address": "aws_autoscaling_group.workers",
                "mode": "managed",
                "type": "aws_autoscaling_group",
                "name": "workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "capacity_rebalance": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"capacity_rebalance\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "default_cooldown": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"default_cooldown\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"asg_desired_capacity\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "enabled_metrics": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"enabled_metrics\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "force_delete": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"asg_force_delete\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "health_check_grace_period": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"health_check_grace_period\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "health_check_type": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"health_check_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "launch_configuration": {
                    "references": [
                      "aws_launch_configuration.workers",
                      "count.index"
                    ]
                  },
                  "load_balancers": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"load_balancers\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "max_instance_lifetime": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"max_instance_lifetime\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"asg_max_size\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"asg_min_size\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "local.cluster_name",
                      "var.worker_groups",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "placement_group": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"placement_group\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "protect_from_scale_in": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"protect_from_scale_in\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "service_linked_role_arn": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"service_linked_role_arn\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "suspended_processes": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"suspended_processes\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "target_group_arns": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"target_group_arns\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "termination_policies": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"termination_policies\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "vpc_zone_identifier": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"subnets\"]",
                      "local.workers_group_defaults"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "local.worker_group_launch_configuration_count"
                  ]
                }
              },
              {
                "address": "aws_autoscaling_group.workers_launch_template",
                "mode": "managed",
                "type": "aws_autoscaling_group",
                "name": "workers_launch_template",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "capacity_rebalance": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"capacity_rebalance\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "default_cooldown": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"default_cooldown\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "desired_capacity": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"asg_desired_capacity\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "enabled_metrics": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"enabled_metrics\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "force_delete": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"asg_force_delete\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "health_check_grace_period": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"health_check_grace_period\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "health_check_type": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"health_check_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "load_balancers": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"load_balancers\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "max_instance_lifetime": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"max_instance_lifetime\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "max_size": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"asg_max_size\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "min_size": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"asg_min_size\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "local.cluster_name",
                      "var.worker_groups_launch_template",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "placement_group": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"placement_group\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "protect_from_scale_in": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"protect_from_scale_in\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "service_linked_role_arn": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"service_linked_role_arn\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "suspended_processes": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"suspended_processes\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "target_group_arns": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"target_group_arns\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "termination_policies": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"termination_policies\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "vpc_zone_identifier": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"subnets\"]",
                      "local.workers_group_defaults"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "local.worker_group_launch_template_count"
                  ]
                }
              },
              {
                "address": "aws_cloudwatch_log_group.this",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.cluster_log_kms_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.cluster_log_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.cluster_enabled_log_types",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_eks_cluster.this",
                "mode": "managed",
                "type": "aws_eks_cluster",
                "name": "this",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "enabled_cluster_log_types": {
                    "references": [
                      "var.cluster_enabled_log_types"
                    ]
                  },
                  "kubernetes_network_config": [
                    {
                      "service_ipv4_cidr": {
                        "references": [
                          "var.cluster_service_ipv4_cidr"
                        ]
                      }
                    }
                  ],
                  "name": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "role_arn": {
                    "references": [
                      "local.cluster_iam_role_arn"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.cluster_tags"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "references": [
                        "var.cluster_create_timeout"
                      ]
                    },
                    "delete": {
                      "references": [
                        "var.cluster_delete_timeout"
                      ]
                    },
                    "update": {
                      "references": [
                        "var.cluster_update_timeout"
                      ]
                    }
                  },
                  "version": {
                    "references": [
                      "var.cluster_version"
                    ]
                  },
                  "vpc_config": [
                    {
                      "endpoint_private_access": {
                        "references": [
                          "var.cluster_endpoint_private_access"
                        ]
                      },
                      "endpoint_public_access": {
                        "references": [
                          "var.cluster_endpoint_public_access"
                        ]
                      },
                      "public_access_cidrs": {
                        "references": [
                          "var.cluster_endpoint_public_access_cidrs"
                        ]
                      },
                      "security_group_ids": {
                        "references": [
                          "local.cluster_security_group_id"
                        ]
                      },
                      "subnet_ids": {
                        "references": [
                          "var.subnets"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks"
                  ]
                },
                "depends_on": [
                  "aws_security_group_rule.cluster_egress_internet",
                  "aws_security_group_rule.cluster_https_worker_ingress",
                  "aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
                  "aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
                  "aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
                  "aws_cloudwatch_log_group.this"
                ]
              },
              {
                "address": "aws_iam_instance_profile.workers",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "name_prefix": {
                    "references": [
                      "local.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "role": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.default_iam_role_id"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks",
                    "local.worker_group_launch_configuration_count"
                  ]
                }
              },
              {
                "address": "aws_iam_instance_profile.workers_launch_template",
                "mode": "managed",
                "type": "aws_iam_instance_profile",
                "name": "workers_launch_template",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "name_prefix": {
                    "references": [
                      "local.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "role": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.default_iam_role_id"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks",
                    "local.worker_group_launch_template_count"
                  ]
                }
              },
              {
                "address": "aws_iam_openid_connect_provider.oidc_provider",
                "mode": "managed",
                "type": "aws_iam_openid_connect_provider",
                "name": "oidc_provider",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "client_id_list": {
                    "references": [
                      "local.client_id_list"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.cluster_name",
                      "var.tags"
                    ]
                  },
                  "thumbprint_list": {
                    "references": [
                      "var.eks_oidc_root_ca_thumbprint"
                    ]
                  },
                  "url": {
                    "references": [
                      "local.cluster_oidc_issuer_url"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.enable_irsa",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.cluster_deny_log_group",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "cluster_deny_log_group",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Deny CreateLogGroup"
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.cluster_deny_log_group[0].json",
                      "data.aws_iam_policy_document.cluster_deny_log_group[0]",
                      "data.aws_iam_policy_document.cluster_deny_log_group"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.cluster_elb_sl_role_creation",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "cluster_elb_sl_role_creation",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Permissions for EKS to create AWSServiceRoleForElasticLoadBalancing service-linked role"
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.cluster_elb_sl_role_creation[0].json",
                      "data.aws_iam_policy_document.cluster_elb_sl_role_creation[0]",
                      "data.aws_iam_policy_document.cluster_elb_sl_role_creation"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role.cluster",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "cluster",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.cluster_assume_role_policy.json",
                      "data.aws_iam_policy_document.cluster_assume_role_policy"
                    ]
                  },
                  "force_detach_policies": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.cluster_iam_role_name",
                      "var.cluster_iam_role_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_iam_role_name",
                      "var.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role.workers",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.workers_assume_role_policy.json",
                      "data.aws_iam_policy_document.workers_assume_role_policy"
                    ]
                  },
                  "force_detach_policies": {
                    "constant_value": true
                  },
                  "name": {
                    "references": [
                      "var.workers_role_name",
                      "var.workers_role_name"
                    ]
                  },
                  "name_prefix": {
                    "references": [
                      "var.workers_role_name",
                      "local.cluster_name"
                    ]
                  },
                  "path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "cluster_AmazonEKSClusterPolicy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "local.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "cluster_AmazonEKSServicePolicy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "local.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.cluster_AmazonEKSVPCResourceControllerPolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "cluster_AmazonEKSVPCResourceControllerPolicy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "local.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.cluster_deny_log_group",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "cluster_deny_log_group",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.cluster_deny_log_group[0].arn",
                      "aws_iam_policy.cluster_deny_log_group[0]",
                      "aws_iam_policy.cluster_deny_log_group"
                    ]
                  },
                  "role": {
                    "references": [
                      "local.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.cluster_elb_sl_role_creation",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "cluster_elb_sl_role_creation",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.cluster_elb_sl_role_creation[0].arn",
                      "aws_iam_policy.cluster_elb_sl_role_creation[0]",
                      "aws_iam_policy.cluster_elb_sl_role_creation"
                    ]
                  },
                  "role": {
                    "references": [
                      "local.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "workers_AmazonEC2ContainerRegistryReadOnly",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.workers[0].name",
                      "aws_iam_role.workers[0]",
                      "aws_iam_role.workers"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "workers_AmazonEKSWorkerNodePolicy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.workers[0].name",
                      "aws_iam_role.workers[0]",
                      "aws_iam_role.workers"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "workers_AmazonEKS_CNI_Policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "local.policy_arn_prefix"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.workers[0].name",
                      "aws_iam_role.workers[0]",
                      "aws_iam_role.workers"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.attach_worker_cni_policy",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.workers_additional_policies",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "workers_additional_policies",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "var.workers_additional_policies",
                      "count.index"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.workers[0].name",
                      "aws_iam_role.workers[0]",
                      "aws_iam_role.workers"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "var.create_eks",
                    "var.workers_additional_policies"
                  ]
                }
              },
              {
                "address": "aws_launch_configuration.workers",
                "mode": "managed",
                "type": "aws_launch_configuration",
                "name": "workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "associate_public_ip_address": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"public_ip\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "ebs_optimized": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.ebs_optimized_not_supported",
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"instance_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "enable_monitoring": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"enable_monitoring\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "iam_instance_profile": {
                    "references": [
                      "aws_iam_instance_profile.workers",
                      "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
                      "count.index"
                    ]
                  },
                  "image_id": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"platform\"]",
                      "local.workers_group_defaults",
                      "local.default_ami_id_windows",
                      "local.default_ami_id_linux"
                    ]
                  },
                  "instance_type": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"instance_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"key_name\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "metadata_options": [
                    {
                      "http_endpoint": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_endpoint\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "http_put_response_hop_limit": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_put_response_hop_limit\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "http_tokens": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_tokens\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "name_prefix": {
                    "references": [
                      "local.cluster_name",
                      "var.worker_groups",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "placement_tenancy": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"placement_tenancy\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "root_block_device": [
                    {
                      "delete_on_termination": {
                        "constant_value": true
                      },
                      "encrypted": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"root_encrypted\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "iops": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"root_iops\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "throughput": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"root_volume_throughput\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "volume_size": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"root_volume_size\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "volume_type": {
                        "references": [
                          "var.worker_groups",
                          "count.index",
                          "local.workers_group_defaults[\"root_volume_type\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "security_groups": {
                    "references": [
                      "local.worker_security_group_id",
                      "var.worker_additional_security_group_ids",
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"additional_security_group_ids\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "spot_price": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"spot_price\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "user_data_base64": {
                    "references": [
                      "local.launch_configuration_userdata_rendered",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "local.worker_group_launch_configuration_count"
                  ]
                },
                "depends_on": [
                  "aws_security_group_rule.workers_egress_internet",
                  "aws_security_group_rule.workers_ingress_self",
                  "aws_security_group_rule.workers_ingress_cluster",
                  "aws_security_group_rule.workers_ingress_cluster_kubelet",
                  "aws_security_group_rule.workers_ingress_cluster_https",
                  "aws_security_group_rule.workers_ingress_cluster_primary",
                  "aws_security_group_rule.cluster_primary_ingress_workers",
                  "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
                  "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
                  "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
                  "aws_iam_role_policy_attachment.workers_additional_policies"
                ]
              },
              {
                "address": "aws_launch_template.workers_launch_template",
                "mode": "managed",
                "type": "aws_launch_template",
                "name": "workers_launch_template",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "block_device_mappings": [
                    {
                      "device_name": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"platform\"]",
                          "local.workers_group_defaults",
                          "local.workers_group_defaults[\"root_block_device_name_windows\"]",
                          "local.workers_group_defaults",
                          "local.workers_group_defaults[\"root_block_device_name\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "ebs": [
                        {
                          "delete_on_termination": {
                            "constant_value": true
                          },
                          "encrypted": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_encrypted\"]",
                              "local.workers_group_defaults"
                            ]
                          },
                          "iops": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_iops\"]",
                              "local.workers_group_defaults"
                            ]
                          },
                          "kms_key_id": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_kms_key_id\"]",
                              "local.workers_group_defaults"
                            ]
                          },
                          "throughput": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_volume_throughput\"]",
                              "local.workers_group_defaults"
                            ]
                          },
                          "volume_size": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_volume_size\"]",
                              "local.workers_group_defaults"
                            ]
                          },
                          "volume_type": {
                            "references": [
                              "var.worker_groups_launch_template",
                              "count.index",
                              "local.workers_group_defaults[\"root_volume_type\"]",
                              "local.workers_group_defaults"
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "ebs_optimized": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.ebs_optimized_not_supported",
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"instance_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "enclave_options": [
                    {
                      "enabled": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"enclave_support\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "iam_instance_profile": [
                    {
                      "name": {
                        "references": [
                          "aws_iam_instance_profile.workers_launch_template",
                          "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
                          "count.index"
                        ]
                      }
                    }
                  ],
                  "image_id": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"platform\"]",
                      "local.workers_group_defaults",
                      "local.default_ami_id_windows",
                      "local.default_ami_id_linux"
                    ]
                  },
                  "instance_type": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"instance_type\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "key_name": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"key_name\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "metadata_options": [
                    {
                      "http_endpoint": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_endpoint\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "http_put_response_hop_limit": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_put_response_hop_limit\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "http_tokens": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"metadata_http_tokens\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "monitoring": [
                    {
                      "enabled": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"enable_monitoring\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "name_prefix": {
                    "references": [
                      "local.cluster_name",
                      "var.worker_groups_launch_template",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "network_interfaces": [
                    {
                      "associate_public_ip_address": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"public_ip\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "delete_on_termination": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"eni_delete\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "interface_type": {
                        "references": [
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"interface_type\"]",
                          "local.workers_group_defaults"
                        ]
                      },
                      "security_groups": {
                        "references": [
                          "local.worker_security_group_id",
                          "var.worker_additional_security_group_ids",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"additional_security_group_ids\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "tag_specifications": [
                    {
                      "resource_type": {
                        "constant_value": "volume"
                      },
                      "tags": {
                        "references": [
                          "local.cluster_name",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "count.index",
                          "var.tags",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"tags\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    },
                    {
                      "resource_type": {
                        "constant_value": "instance"
                      },
                      "tags": {
                        "references": [
                          "local.cluster_name",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "count.index",
                          "var.tags",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"tags\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    },
                    {
                      "resource_type": {
                        "constant_value": "network-interface"
                      },
                      "tags": {
                        "references": [
                          "local.cluster_name",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "count.index",
                          "var.tags",
                          "var.worker_groups_launch_template",
                          "count.index",
                          "local.workers_group_defaults[\"tags\"]",
                          "local.workers_group_defaults"
                        ]
                      }
                    }
                  ],
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  },
                  "update_default_version": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"update_default_version\"]",
                      "local.workers_group_defaults"
                    ]
                  },
                  "user_data": {
                    "references": [
                      "local.launch_template_userdata_rendered",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "local.worker_group_launch_template_count"
                  ]
                },
                "depends_on": [
                  "aws_security_group_rule.workers_egress_internet",
                  "aws_security_group_rule.workers_ingress_self",
                  "aws_security_group_rule.workers_ingress_cluster",
                  "aws_security_group_rule.workers_ingress_cluster_kubelet",
                  "aws_security_group_rule.workers_ingress_cluster_https",
                  "aws_security_group_rule.workers_ingress_cluster_primary",
                  "aws_security_group_rule.cluster_primary_ingress_workers",
                  "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
                  "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
                  "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
                  "aws_iam_role_policy_attachment.workers_additional_policies"
                ]
              },
              {
                "address": "aws_security_group.cluster",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "cluster",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "EKS cluster security group."
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.cluster_name"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.cluster_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group.workers",
                "mode": "managed",
                "type": "aws_security_group",
                "name": "workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Security group for all nodes in the cluster."
                  },
                  "name_prefix": {
                    "references": [
                      "var.cluster_name"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.cluster_name",
                      "var.cluster_name"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "var.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster_egress_internet",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster_egress_internet",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.cluster_egress_cidrs"
                    ]
                  },
                  "description": {
                    "constant_value": "Allow cluster egress access to the Internet."
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "-1"
                  },
                  "security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 0
                  },
                  "type": {
                    "constant_value": "egress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.cluster_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster_https_worker_ingress",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster_https_worker_ingress",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow pods to communicate with the EKS cluster API."
                  },
                  "from_port": {
                    "constant_value": 443
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 443
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.cluster_create_security_group",
                    "var.create_eks",
                    "var.worker_create_security_group"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster_primary_ingress_workers",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster_primary_ingress_workers",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow pods running on workers to send communication to cluster primary security group (e.g. Fargate pods)."
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "all"
                  },
                  "security_group_id": {
                    "references": [
                      "local.cluster_primary_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.worker_create_cluster_primary_security_group_rules",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster_private_access_cidrs_source",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster_private_access_cidrs_source",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "each.value"
                    ]
                  },
                  "description": {
                    "constant_value": "Allow private K8S API ingress from custom CIDR source."
                  },
                  "from_port": {
                    "constant_value": 443
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                      "aws_eks_cluster.this[0].vpc_config[0]",
                      "aws_eks_cluster.this[0].vpc_config",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "to_port": {
                    "constant_value": 443
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "for_each_expression": {
                  "references": [
                    "var.create_eks",
                    "var.cluster_create_endpoint_private_access_sg_rule",
                    "var.cluster_endpoint_private_access",
                    "var.cluster_endpoint_private_access_cidrs",
                    "var.cluster_endpoint_private_access_cidrs"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.cluster_private_access_sg_source",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "cluster_private_access_sg_source",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow private K8S API ingress from custom Security Groups source."
                  },
                  "from_port": {
                    "constant_value": 443
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
                      "aws_eks_cluster.this[0].vpc_config[0]",
                      "aws_eks_cluster.this[0].vpc_config",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "var.cluster_endpoint_private_access_sg",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "constant_value": 443
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "var.cluster_create_endpoint_private_access_sg_rule",
                    "var.cluster_endpoint_private_access",
                    "var.cluster_endpoint_private_access_sg",
                    "var.cluster_endpoint_private_access_sg"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_egress_internet",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_egress_internet",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "cidr_blocks": {
                    "references": [
                      "var.workers_egress_cidrs"
                    ]
                  },
                  "description": {
                    "constant_value": "Allow nodes all egress to the Internet."
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "-1"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 0
                  },
                  "type": {
                    "constant_value": "egress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_ingress_cluster",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_ingress_cluster",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow workers pods to receive communication from the cluster control plane."
                  },
                  "from_port": {
                    "references": [
                      "var.worker_sg_ingress_from_port"
                    ]
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_ingress_cluster_https",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_ingress_cluster_https",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane."
                  },
                  "from_port": {
                    "constant_value": 443
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 443
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_ingress_cluster_kubelet",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_ingress_cluster_kubelet",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow workers Kubelets to receive communication from the cluster control plane."
                  },
                  "from_port": {
                    "constant_value": 10250
                  },
                  "protocol": {
                    "constant_value": "tcp"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.cluster_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 10250
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks",
                    "var.worker_sg_ingress_from_port"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_ingress_cluster_primary",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_ingress_cluster_primary",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow pods running on workers to receive communication from cluster primary security group (e.g. Fargate pods)."
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "all"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.cluster_primary_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.worker_create_cluster_primary_security_group_rules",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "aws_security_group_rule.workers_ingress_self",
                "mode": "managed",
                "type": "aws_security_group_rule",
                "name": "workers_ingress_self",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "description": {
                    "constant_value": "Allow node to communicate with each other."
                  },
                  "from_port": {
                    "constant_value": 0
                  },
                  "protocol": {
                    "constant_value": "-1"
                  },
                  "security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "source_security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "to_port": {
                    "constant_value": 65535
                  },
                  "type": {
                    "constant_value": "ingress"
                  }
                },
                "schema_version": 2,
                "count_expression": {
                  "references": [
                    "var.worker_create_security_group",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "kubernetes_config_map.aws_auth",
                "mode": "managed",
                "type": "kubernetes_config_map",
                "name": "aws_auth",
                "provider_config_key": "eks:kubernetes",
                "expressions": {
                  "data": {
                    "references": [
                      "local.configmap_roles",
                      "var.map_roles",
                      "var.map_users",
                      "var.map_accounts"
                    ]
                  },
                  "metadata": [
                    {
                      "labels": {
                        "references": [
                          "var.aws_auth_additional_labels"
                        ]
                      },
                      "name": {
                        "constant_value": "aws-auth"
                      },
                      "namespace": {
                        "constant_value": "kube-system"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "var.manage_aws_auth"
                  ]
                },
                "depends_on": [
                  "data.http.wait_for_cluster[0]"
                ]
              },
              {
                "address": "local_file.kubeconfig",
                "mode": "managed",
                "type": "local_file",
                "name": "kubeconfig",
                "provider_config_key": "eks:local",
                "expressions": {
                  "content": {
                    "references": [
                      "local.kubeconfig"
                    ]
                  },
                  "directory_permission": {
                    "constant_value": "0755"
                  },
                  "file_permission": {
                    "references": [
                      "var.kubeconfig_file_permission"
                    ]
                  },
                  "filename": {
                    "references": [
                      "var.kubeconfig_output_path",
                      "var.kubeconfig_output_path",
                      "var.cluster_name",
                      "var.kubeconfig_output_path"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.write_kubeconfig",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "data.aws_ami.eks_worker",
                "mode": "data",
                "type": "aws_ami",
                "name": "eks_worker",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "filter": [
                    {
                      "name": {
                        "constant_value": "name"
                      },
                      "values": {
                        "references": [
                          "local.worker_ami_name_filter"
                        ]
                      }
                    }
                  ],
                  "most_recent": {
                    "constant_value": true
                  },
                  "owners": {
                    "references": [
                      "var.worker_ami_owner_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.worker_groups_platforms"
                  ]
                }
              },
              {
                "address": "data.aws_ami.eks_worker_windows",
                "mode": "data",
                "type": "aws_ami",
                "name": "eks_worker_windows",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "filter": [
                    {
                      "name": {
                        "constant_value": "name"
                      },
                      "values": {
                        "references": [
                          "local.worker_ami_name_filter_windows"
                        ]
                      }
                    },
                    {
                      "name": {
                        "constant_value": "platform"
                      },
                      "values": {
                        "constant_value": [
                          "windows"
                        ]
                      }
                    }
                  ],
                  "most_recent": {
                    "constant_value": true
                  },
                  "owners": {
                    "references": [
                      "var.worker_ami_owner_id_windows"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.worker_groups_platforms"
                  ]
                }
              },
              {
                "address": "data.aws_caller_identity.current",
                "mode": "data",
                "type": "aws_caller_identity",
                "name": "current",
                "provider_config_key": "eks:aws",
                "schema_version": 0
              },
              {
                "address": "data.aws_iam_instance_profile.custom_worker_group_iam_instance_profile",
                "mode": "data",
                "type": "aws_iam_instance_profile",
                "name": "custom_worker_group_iam_instance_profile",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.worker_groups",
                      "count.index",
                      "local.workers_group_defaults[\"iam_instance_profile_name\"]",
                      "local.workers_group_defaults"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "local.worker_group_launch_configuration_count"
                  ]
                }
              },
              {
                "address": "data.aws_iam_instance_profile.custom_worker_group_launch_template_iam_instance_profile",
                "mode": "data",
                "type": "aws_iam_instance_profile",
                "name": "custom_worker_group_launch_template_iam_instance_profile",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.worker_groups_launch_template",
                      "count.index",
                      "local.workers_group_defaults[\"iam_instance_profile_name\"]",
                      "local.workers_group_defaults"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_worker_iam_resources",
                    "local.worker_group_launch_template_count"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.cluster_assume_role_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_assume_role_policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "eks.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ],
                      "sid": {
                        "constant_value": "EKSClusterAssumeRole"
                      }
                    }
                  ]
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_iam_policy_document.cluster_deny_log_group",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_deny_log_group",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "logs:CreateLogGroup"
                        ]
                      },
                      "effect": {
                        "constant_value": "Deny"
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.cluster_elb_sl_role_creation",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "cluster_elb_sl_role_creation",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "ec2:DescribeAccountAttributes",
                          "ec2:DescribeInternetGateways",
                          "ec2:DescribeAddresses"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources",
                    "var.create_eks"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.workers_assume_role_policy",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "workers_assume_role_policy",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "references": [
                              "local.ec2_principal"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ],
                      "sid": {
                        "constant_value": "EKSWorkerAssumeRole"
                      }
                    }
                  ]
                },
                "schema_version": 0
              },
              {
                "address": "data.aws_iam_role.custom_cluster_iam_role",
                "mode": "data",
                "type": "aws_iam_role",
                "name": "custom_cluster_iam_role",
                "provider_config_key": "eks:aws",
                "expressions": {
                  "name": {
                    "references": [
                      "var.cluster_iam_role_name"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.manage_cluster_iam_resources"
                  ]
                }
              },
              {
                "address": "data.aws_partition.current",
                "mode": "data",
                "type": "aws_partition",
                "name": "current",
                "provider_config_key": "eks:aws",
                "schema_version": 0
              },
              {
                "address": "data.http.wait_for_cluster",
                "mode": "data",
                "type": "http",
                "name": "wait_for_cluster",
                "provider_config_key": "eks:http",
                "expressions": {
                  "ca_certificate": {
                    "references": [
                      "local.cluster_auth_base64"
                    ]
                  },
                  "timeout": {
                    "references": [
                      "var.wait_for_cluster_timeout"
                    ]
                  },
                  "url": {
                    "references": [
                      "aws_eks_cluster.this[0].endpoint",
                      "aws_eks_cluster.this[0]",
                      "aws_eks_cluster.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_eks",
                    "var.manage_aws_auth"
                  ]
                },
                "depends_on": [
                  "aws_eks_cluster.this",
                  "aws_security_group_rule.cluster_private_access_sg_source",
                  "aws_security_group_rule.cluster_private_access_cidrs_source"
                ]
              }
            ],
            "module_calls": {
              "fargate": {
                "source": "./modules/fargate",
                "expressions": {
                  "cluster_name": {
                    "references": [
                      "local.cluster_name"
                    ]
                  },
                  "create_eks": {
                    "references": [
                      "var.create_eks"
                    ]
                  },
                  "create_fargate_pod_execution_role": {
                    "references": [
                      "var.create_fargate_pod_execution_role"
                    ]
                  },
                  "fargate_pod_execution_role_name": {
                    "references": [
                      "var.fargate_pod_execution_role_name"
                    ]
                  },
                  "fargate_profiles": {
                    "references": [
                      "var.fargate_profiles"
                    ]
                  },
                  "iam_path": {
                    "references": [
                      "var.iam_path"
                    ]
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.permissions_boundary"
                    ]
                  },
                  "subnets": {
                    "references": [
                      "var.fargate_subnets",
                      "var.subnets"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "aws_auth_roles": {
                      "expression": {
                        "references": [
                          "local.pod_execution_role_arn",
                          "local.create_eks"
                        ]
                      },
                      "description": "Roles for use in aws-auth ConfigMap"
                    },
                    "fargate_profile_arns": {
                      "expression": {
                        "references": [
                          "aws_eks_fargate_profile.this"
                        ]
                      },
                      "description": "Amazon Resource Name (ARN) of the EKS Fargate Profiles."
                    },
                    "fargate_profile_ids": {
                      "expression": {
                        "references": [
                          "aws_eks_fargate_profile.this"
                        ]
                      },
                      "description": "EKS Cluster name and EKS Fargate Profile names separated by a colon (:)."
                    },
                    "iam_role_arn": {
                      "expression": {
                        "references": [
                          "local.pod_execution_role_arn"
                        ]
                      },
                      "description": "IAM role ARN for EKS Fargate pods"
                    },
                    "iam_role_name": {
                      "expression": {
                        "references": [
                          "local.pod_execution_role_name"
                        ]
                      },
                      "description": "IAM role name for EKS Fargate pods"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_eks_fargate_profile.this",
                      "mode": "managed",
                      "type": "aws_eks_fargate_profile",
                      "name": "this",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "fargate_profile_name": {
                          "references": [
                            "each.value",
                            "var.cluster_name",
                            "each.key"
                          ]
                        },
                        "pod_execution_role_arn": {
                          "references": [
                            "local.pod_execution_role_arn"
                          ]
                        },
                        "subnet_ids": {
                          "references": [
                            "each.value",
                            "var.subnets"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "each.value"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "references": [
                              "each.value[\"timeouts\"].create",
                              "each.value[\"timeouts\"]",
                              "each.value"
                            ]
                          },
                          "delete": {
                            "references": [
                              "each.value[\"timeouts\"].delete",
                              "each.value[\"timeouts\"]",
                              "each.value"
                            ]
                          }
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.fargate_profiles"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role.eks_fargate_pod",
                      "mode": "managed",
                      "type": "aws_iam_role",
                      "name": "eks_fargate_pod",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "assume_role_policy": {
                          "references": [
                            "data.aws_iam_policy_document.eks_fargate_pod_assume_role[0].json",
                            "data.aws_iam_policy_document.eks_fargate_pod_assume_role[0]",
                            "data.aws_iam_policy_document.eks_fargate_pod_assume_role"
                          ]
                        },
                        "name_prefix": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "path": {
                          "references": [
                            "var.iam_path"
                          ]
                        },
                        "permissions_boundary": {
                          "references": [
                            "var.permissions_boundary"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_eks",
                          "var.create_fargate_pod_execution_role"
                        ]
                      }
                    },
                    {
                      "address": "aws_iam_role_policy_attachment.eks_fargate_pod",
                      "mode": "managed",
                      "type": "aws_iam_role_policy_attachment",
                      "name": "eks_fargate_pod",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "policy_arn": {
                          "references": [
                            "data.aws_partition.current.partition",
                            "data.aws_partition.current"
                          ]
                        },
                        "role": {
                          "references": [
                            "aws_iam_role.eks_fargate_pod[0].name",
                            "aws_iam_role.eks_fargate_pod[0]",
                            "aws_iam_role.eks_fargate_pod"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_eks",
                          "var.create_fargate_pod_execution_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_policy_document.eks_fargate_pod_assume_role",
                      "mode": "data",
                      "type": "aws_iam_policy_document",
                      "name": "eks_fargate_pod_assume_role",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "statement": [
                          {
                            "actions": {
                              "constant_value": [
                                "sts:AssumeRole"
                              ]
                            },
                            "effect": {
                              "constant_value": "Allow"
                            },
                            "principals": [
                              {
                                "identifiers": {
                                  "constant_value": [
                                    "eks-fargate-pods.amazonaws.com"
                                  ]
                                },
                                "type": {
                                  "constant_value": "Service"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_eks",
                          "var.create_fargate_pod_execution_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_iam_role.custom_fargate_iam_role",
                      "mode": "data",
                      "type": "aws_iam_role",
                      "name": "custom_fargate_iam_role",
                      "provider_config_key": "fargate:aws",
                      "expressions": {
                        "name": {
                          "references": [
                            "var.fargate_pod_execution_role_name"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "count_expression": {
                        "references": [
                          "local.create_eks",
                          "var.create_fargate_pod_execution_role"
                        ]
                      }
                    },
                    {
                      "address": "data.aws_partition.current",
                      "mode": "data",
                      "type": "aws_partition",
                      "name": "current",
                      "provider_config_key": "fargate:aws",
                      "schema_version": 0
                    }
                  ],
                  "variables": {
                    "cluster_name": {
                      "default": "",
                      "description": "Name of the EKS cluster."
                    },
                    "create_eks": {
                      "default": true,
                      "description": "Controls if EKS resources should be created (it affects almost all resources)"
                    },
                    "create_fargate_pod_execution_role": {
                      "default": true,
                      "description": "Controls if the the IAM Role that provides permissions for the EKS Fargate Profile should be created."
                    },
                    "fargate_pod_execution_role_name": {
                      "default": null,
                      "description": "The IAM Role that provides permissions for the EKS Fargate Profile."
                    },
                    "fargate_profiles": {
                      "default": {},
                      "description": "Fargate profiles to create. See `fargate_profile` keys section in README.md for more details"
                    },
                    "iam_path": {
                      "default": "/",
                      "description": "IAM roles will be created on this path."
                    },
                    "permissions_boundary": {
                      "default": null,
                      "description": "If provided, all IAM roles will be created with this permissions boundary attached."
                    },
                    "subnets": {
                      "default": [],
                      "description": "A list of subnets for the EKS Fargate profiles."
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources."
                    }
                  }
                }
              },
              "node_groups": {
                "source": "./modules/node_groups",
                "expressions": {
                  "cluster_auth_base64": {
                    "references": [
                      "local.cluster_auth_base64"
                    ]
                  },
                  "cluster_endpoint": {
                    "references": [
                      "local.cluster_endpoint"
                    ]
                  },
                  "cluster_name": {
                    "references": [
                      "local.cluster_name"
                    ]
                  },
                  "create_eks": {
                    "references": [
                      "var.create_eks"
                    ]
                  },
                  "default_iam_role_arn": {
                    "references": [
                      "aws_iam_role.workers"
                    ]
                  },
                  "ebs_optimized_not_supported": {
                    "references": [
                      "local.ebs_optimized_not_supported"
                    ]
                  },
                  "node_groups": {
                    "references": [
                      "var.node_groups"
                    ]
                  },
                  "node_groups_defaults": {
                    "references": [
                      "var.node_groups_defaults"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  },
                  "worker_additional_security_group_ids": {
                    "references": [
                      "var.worker_additional_security_group_ids"
                    ]
                  },
                  "worker_security_group_id": {
                    "references": [
                      "local.worker_security_group_id"
                    ]
                  },
                  "workers_group_defaults": {
                    "references": [
                      "local.workers_group_defaults"
                    ]
                  }
                },
                "module": {
                  "outputs": {
                    "aws_auth_roles": {
                      "expression": {
                        "references": [
                          "local.node_groups_expanded",
                          "var.default_iam_role_arn"
                        ]
                      },
                      "description": "Roles for use in aws-auth ConfigMap"
                    },
                    "node_groups": {
                      "expression": {
                        "references": [
                          "aws_eks_node_group.workers"
                        ]
                      },
                      "description": "Outputs from EKS node groups. Map of maps, keyed by `var.node_groups` keys. See `aws_eks_node_group` Terraform documentation for values"
                    }
                  },
                  "resources": [
                    {
                      "address": "aws_eks_node_group.workers",
                      "mode": "managed",
                      "type": "aws_eks_node_group",
                      "name": "workers",
                      "provider_config_key": "node_groups:aws",
                      "expressions": {
                        "ami_type": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "capacity_type": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "cluster_name": {
                          "references": [
                            "var.cluster_name"
                          ]
                        },
                        "disk_size": {
                          "references": [
                            "each.value[\"launch_template_id\"]",
                            "each.value",
                            "each.value[\"create_launch_template\"]",
                            "each.value",
                            "each.value"
                          ]
                        },
                        "force_update_version": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "instance_types": {
                          "references": [
                            "each.value[\"set_instance_types_on_lt\"]",
                            "each.value",
                            "each.value[\"instance_types\"]",
                            "each.value"
                          ]
                        },
                        "labels": {
                          "references": [
                            "var.node_groups_defaults",
                            "var.node_groups",
                            "each.key"
                          ]
                        },
                        "node_group_name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "node_group_name_prefix": {
                          "references": [
                            "each.value",
                            "local.node_groups_names",
                            "each.key"
                          ]
                        },
                        "node_role_arn": {
                          "references": [
                            "each.value[\"iam_role_arn\"]",
                            "each.value"
                          ]
                        },
                        "release_version": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "scaling_config": [
                          {
                            "desired_size": {
                              "references": [
                                "each.value[\"desired_capacity\"]",
                                "each.value"
                              ]
                            },
                            "max_size": {
                              "references": [
                                "each.value[\"max_capacity\"]",
                                "each.value"
                              ]
                            },
                            "min_size": {
                              "references": [
                                "each.value[\"min_capacity\"]",
                                "each.value"
                              ]
                            }
                          }
                        ],
                        "subnet_ids": {
                          "references": [
                            "each.value[\"subnets\"]",
                            "each.value"
                          ]
                        },
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.node_groups_defaults",
                            "var.node_groups",
                            "each.key"
                          ]
                        },
                        "timeouts": {
                          "create": {
                            "references": [
                              "each.value[\"timeouts\"]",
                              "each.value"
                            ]
                          },
                          "delete": {
                            "references": [
                              "each.value[\"timeouts\"]",
                              "each.value"
                            ]
                          },
                          "update": {
                            "references": [
                              "each.value[\"timeouts\"]",
                              "each.value"
                            ]
                          }
                        },
                        "version": {
                          "references": [
                            "each.value"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.node_groups_expanded"
                        ]
                      }
                    },
                    {
                      "address": "aws_launch_template.workers",
                      "mode": "managed",
                      "type": "aws_launch_template",
                      "name": "workers",
                      "provider_config_key": "node_groups:aws",
                      "expressions": {
                        "block_device_mappings": [
                          {
                            "device_name": {
                              "constant_value": "/dev/xvda"
                            },
                            "ebs": [
                              {
                                "delete_on_termination": {
                                  "constant_value": true
                                },
                                "encrypted": {
                                  "references": [
                                    "each.value"
                                  ]
                                },
                                "iops": {
                                  "references": [
                                    "each.value"
                                  ]
                                },
                                "kms_key_id": {
                                  "references": [
                                    "each.value"
                                  ]
                                },
                                "throughput": {
                                  "references": [
                                    "each.value"
                                  ]
                                },
                                "volume_size": {
                                  "references": [
                                    "each.value"
                                  ]
                                },
                                "volume_type": {
                                  "references": [
                                    "each.value"
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "description": {
                          "references": [
                            "local.node_groups_names",
                            "each.key"
                          ]
                        },
                        "ebs_optimized": {
                          "references": [
                            "each.value",
                            "var.ebs_optimized_not_supported",
                            "each.value.instance_types",
                            "each.value"
                          ]
                        },
                        "image_id": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "instance_type": {
                          "references": [
                            "each.value[\"set_instance_types_on_lt\"]",
                            "each.value",
                            "each.value.instance_types",
                            "each.value"
                          ]
                        },
                        "key_name": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "metadata_options": [
                          {
                            "http_endpoint": {
                              "references": [
                                "each.value"
                              ]
                            },
                            "http_put_response_hop_limit": {
                              "references": [
                                "each.value"
                              ]
                            },
                            "http_tokens": {
                              "references": [
                                "each.value"
                              ]
                            }
                          }
                        ],
                        "monitoring": [
                          {
                            "enabled": {
                              "references": [
                                "each.value"
                              ]
                            }
                          }
                        ],
                        "name_prefix": {
                          "references": [
                            "local.node_groups_names",
                            "each.key"
                          ]
                        },
                        "network_interfaces": [
                          {
                            "associate_public_ip_address": {
                              "references": [
                                "each.value"
                              ]
                            },
                            "delete_on_termination": {
                              "references": [
                                "each.value"
                              ]
                            },
                            "security_groups": {
                              "references": [
                                "var.worker_security_group_id",
                                "var.worker_additional_security_group_ids",
                                "each.value"
                              ]
                            }
                          }
                        ],
                        "tag_specifications": [
                          {
                            "resource_type": {
                              "constant_value": "instance"
                            },
                            "tags": {
                              "references": [
                                "var.tags",
                                "local.node_groups_names",
                                "each.key",
                                "var.node_groups_defaults",
                                "var.node_groups",
                                "each.key"
                              ]
                            }
                          },
                          {
                            "resource_type": {
                              "constant_value": "volume"
                            },
                            "tags": {
                              "references": [
                                "var.tags",
                                "local.node_groups_names",
                                "each.key",
                                "var.node_groups_defaults",
                                "var.node_groups",
                                "each.key"
                              ]
                            }
                          },
                          {
                            "resource_type": {
                              "constant_value": "network-interface"
                            },
                            "tags": {
                              "references": [
                                "var.tags",
                                "local.node_groups_names",
                                "each.key",
                                "var.node_groups_defaults",
                                "var.node_groups",
                                "each.key"
                              ]
                            }
                          }
                        ],
                        "tags": {
                          "references": [
                            "var.tags",
                            "var.node_groups_defaults",
                            "var.node_groups",
                            "each.key"
                          ]
                        },
                        "update_default_version": {
                          "references": [
                            "each.value"
                          ]
                        },
                        "user_data": {
                          "references": [
                            "data.cloudinit_config.workers_userdata",
                            "each.key"
                          ]
                        }
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.node_groups_expanded"
                        ]
                      }
                    },
                    {
                      "address": "data.cloudinit_config.workers_userdata",
                      "mode": "data",
                      "type": "cloudinit_config",
                      "name": "workers_userdata",
                      "provider_config_key": "node_groups:cloudinit",
                      "expressions": {
                        "base64_encode": {
                          "constant_value": true
                        },
                        "boundary": {
                          "constant_value": "//"
                        },
                        "gzip": {
                          "constant_value": false
                        },
                        "part": [
                          {
                            "content": {
                              "references": [
                                "path.module",
                                "var.cluster_name",
                                "var.cluster_endpoint",
                                "var.cluster_auth_base64",
                                "each.value",
                                "each.value[\"ami_is_eks_optimized\"]",
                                "each.value",
                                "each.value[\"bootstrap_env\"]",
                                "each.value",
                                "each.value[\"kubelet_extra_args\"]",
                                "each.value",
                                "each.value[\"pre_userdata\"]",
                                "each.value",
                                "each.value",
                                "each.value",
                                "each.value"
                              ]
                            },
                            "content_type": {
                              "constant_value": "text/x-shellscript"
                            }
                          }
                        ]
                      },
                      "schema_version": 0,
                      "for_each_expression": {
                        "references": [
                          "local.node_groups_expanded"
                        ]
                      }
                    }
                  ],
                  "variables": {
                    "cluster_auth_base64": {
                      "default": "",
                      "description": "Base64 encoded CA of parent cluster"
                    },
                    "cluster_endpoint": {
                      "default": "",
                      "description": "Endpoint of parent cluster"
                    },
                    "cluster_name": {
                      "default": "",
                      "description": "Name of parent cluster"
                    },
                    "create_eks": {
                      "default": true,
                      "description": "Controls if EKS resources should be created (it affects almost all resources)"
                    },
                    "default_iam_role_arn": {
                      "default": "",
                      "description": "ARN of the default IAM worker role to use if one is not specified in `var.node_groups` or `var.node_groups_defaults`"
                    },
                    "ebs_optimized_not_supported": {
                      "default": [],
                      "description": "List of instance types that do not support EBS optimization"
                    },
                    "node_groups": {
                      "default": {},
                      "description": "Map of maps of `eks_node_groups` to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details"
                    },
                    "node_groups_defaults": {
                      "default": {},
                      "description": "map of maps of node groups to create. See \"`node_groups` and `node_groups_defaults` keys\" section in README.md for more details"
                    },
                    "tags": {
                      "default": {},
                      "description": "A map of tags to add to all resources"
                    },
                    "worker_additional_security_group_ids": {
                      "default": [],
                      "description": "A list of additional security group ids to attach to worker instances"
                    },
                    "worker_security_group_id": {
                      "default": "",
                      "description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster."
                    },
                    "workers_group_defaults": {
                      "default": {},
                      "description": "Workers group defaults from parent"
                    }
                  }
                },
                "depends_on": [
                  "aws_eks_cluster.this",
                  "aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
                  "aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
                  "aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly"
                ]
              }
            },
            "variables": {
              "attach_worker_cni_policy": {
                "default": true,
                "description": "Whether to attach the Amazon managed `AmazonEKS_CNI_Policy` IAM policy to the default worker IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster."
              },
              "aws_auth_additional_labels": {
                "default": {},
                "description": "Additional kubernetes labels applied on aws-auth ConfigMap"
              },
              "cluster_create_endpoint_private_access_sg_rule": {
                "default": false,
                "description": "Whether to create security group rules for the access to the Amazon EKS private API server endpoint. When is `true`, `cluster_endpoint_private_access_cidrs` must be setted."
              },
              "cluster_create_security_group": {
                "default": true,
                "description": "Whether to create a security group for the cluster or attach the cluster to `cluster_security_group_id`."
              },
              "cluster_create_timeout": {
                "default": "30m",
                "description": "Timeout value when creating the EKS cluster."
              },
              "cluster_delete_timeout": {
                "default": "15m",
                "description": "Timeout value when deleting the EKS cluster."
              },
              "cluster_egress_cidrs": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks that are permitted for cluster egress traffic."
              },
              "cluster_enabled_log_types": {
                "default": [],
                "description": "A list of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
              },
              "cluster_encryption_config": {
                "default": [],
                "description": "Configuration block with encryption configuration for the cluster. See examples/secrets_encryption/main.tf for example format"
              },
              "cluster_endpoint_private_access": {
                "default": false,
                "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled."
              },
              "cluster_endpoint_private_access_cidrs": {
                "default": null,
                "description": "List of CIDR blocks which can access the Amazon EKS private API server endpoint. To use this `cluster_endpoint_private_access` and `cluster_create_endpoint_private_access_sg_rule` must be set to `true`."
              },
              "cluster_endpoint_private_access_sg": {
                "default": null,
                "description": "List of security group IDs which can access the Amazon EKS private API server endpoint. To use this `cluster_endpoint_private_access` and `cluster_create_endpoint_private_access_sg_rule` must be set to `true`."
              },
              "cluster_endpoint_public_access": {
                "default": true,
                "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled. When it's set to `false` ensure to have a proper private access with `cluster_endpoint_private_access = true`."
              },
              "cluster_endpoint_public_access_cidrs": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint."
              },
              "cluster_iam_role_name": {
                "default": "",
                "description": "IAM role name for the cluster. If manage_cluster_iam_resources is set to false, set this to reuse an existing IAM role. If manage_cluster_iam_resources is set to true, set this to force the created role name."
              },
              "cluster_log_kms_key_id": {
                "default": "",
                "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
              },
              "cluster_log_retention_in_days": {
                "default": 90,
                "description": "Number of days to retain log events. Default retention - 90 days."
              },
              "cluster_name": {
                "default": "",
                "description": "Name of the EKS cluster. Also used as a prefix in names of related resources."
              },
              "cluster_security_group_id": {
                "default": "",
                "description": "If provided, the EKS cluster will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the workers"
              },
              "cluster_service_ipv4_cidr": {
                "default": null,
                "description": "service ipv4 cidr for the kubernetes cluster"
              },
              "cluster_tags": {
                "default": {},
                "description": "A map of tags to add to just the eks resource."
              },
              "cluster_update_timeout": {
                "default": "60m",
                "description": "Timeout value when updating the EKS cluster."
              },
              "cluster_version": {
                "default": null,
                "description": "Kubernetes minor version to use for the EKS cluster (for example 1.21)."
              },
              "create_eks": {
                "default": true,
                "description": "Controls if EKS resources should be created (it affects almost all resources)"
              },
              "create_fargate_pod_execution_role": {
                "default": true,
                "description": "Controls if the EKS Fargate pod execution IAM role should be created."
              },
              "default_platform": {
                "default": "linux",
                "description": "Default platform name. Valid options are `linux` and `windows`."
              },
              "eks_oidc_root_ca_thumbprint": {
                "default": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "description": "Thumbprint of Root CA for EKS OIDC, Valid until 2037"
              },
              "enable_irsa": {
                "default": false,
                "description": "Whether to create OpenID Connect Provider for EKS to enable IRSA"
              },
              "fargate_pod_execution_role_name": {
                "default": null,
                "description": "The IAM Role that provides permissions for the EKS Fargate Profile."
              },
              "fargate_profiles": {
                "default": {},
                "description": "Fargate profiles to create. See `fargate_profile` keys section in fargate submodule's README.md for more details"
              },
              "fargate_subnets": {
                "default": [],
                "description": "A list of subnets to place fargate workers within (if different from subnets)."
              },
              "iam_path": {
                "default": "/",
                "description": "If provided, all IAM roles will be created on this path."
              },
              "kubeconfig_api_version": {
                "default": "client.authentication.k8s.io/v1alpha1",
                "description": "KubeConfig API version. Defaults to client.authentication.k8s.io/v1alpha1"
              },
              "kubeconfig_aws_authenticator_additional_args": {
                "default": [],
                "description": "Any additional arguments to pass to the authenticator such as the role to assume. e.g. [\"-r\", \"MyEksRole\"]."
              },
              "kubeconfig_aws_authenticator_command": {
                "default": "aws-iam-authenticator",
                "description": "Command to use to fetch AWS EKS credentials."
              },
              "kubeconfig_aws_authenticator_command_args": {
                "default": [],
                "description": "Default arguments passed to the authenticator command. Defaults to [token -i $cluster_name]."
              },
              "kubeconfig_aws_authenticator_env_variables": {
                "default": {},
                "description": "Environment variables that should be used when executing the authenticator. e.g. { AWS_PROFILE = \"eks\"}."
              },
              "kubeconfig_file_permission": {
                "default": "0600",
                "description": "File permission of the Kubectl config file containing cluster configuration saved to `kubeconfig_output_path.`"
              },
              "kubeconfig_name": {
                "default": "",
                "description": "Override the default name used for items kubeconfig."
              },
              "kubeconfig_output_path": {
                "default": "./",
                "description": "Where to save the Kubectl config file (if `write_kubeconfig = true`). Assumed to be a directory if the value ends with a forward slash `/`."
              },
              "manage_aws_auth": {
                "default": true,
                "description": "Whether to apply the aws-auth configmap file."
              },
              "manage_cluster_iam_resources": {
                "default": true,
                "description": "Whether to let the module manage cluster IAM resources. If set to false, cluster_iam_role_name must be specified."
              },
              "manage_worker_iam_resources": {
                "default": true,
                "description": "Whether to let the module manage worker IAM resources. If set to false, iam_instance_profile_name must be specified for workers."
              },
              "map_accounts": {
                "default": [],
                "description": "Additional AWS account numbers to add to the aws-auth configmap."
              },
              "map_roles": {
                "default": [],
                "description": "Additional IAM roles to add to the aws-auth configmap."
              },
              "map_users": {
                "default": [],
                "description": "Additional IAM users to add to the aws-auth configmap."
              },
              "node_groups": {
                "default": {},
                "description": "Map of map of node groups to create. See `node_groups` module's documentation for more details"
              },
              "node_groups_defaults": {
                "default": {},
                "description": "Map of values to be applied to all node groups. See `node_groups` module's documentation for more details"
              },
              "openid_connect_audiences": {
                "default": [],
                "description": "List of OpenID Connect audience client IDs to add to the IRSA provider."
              },
              "permissions_boundary": {
                "default": null,
                "description": "If provided, all IAM roles will be created with this permissions boundary attached."
              },
              "subnets": {
                "default": [],
                "description": "A list of subnets to place the EKS cluster and workers within."
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources. Tags added to launch configuration or templates override these values for ASG Tags only."
              },
              "vpc_id": {
                "default": null,
                "description": "VPC where the cluster and workers will be deployed."
              },
              "wait_for_cluster_timeout": {
                "default": 300,
                "description": "A timeout (in seconds) to wait for cluster to be available."
              },
              "worker_additional_security_group_ids": {
                "default": [],
                "description": "A list of additional security group ids to attach to worker instances"
              },
              "worker_ami_name_filter": {
                "default": "",
                "description": "Name filter for AWS EKS worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used."
              },
              "worker_ami_name_filter_windows": {
                "default": "",
                "description": "Name filter for AWS EKS Windows worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used."
              },
              "worker_ami_owner_id": {
                "default": "amazon",
                "description": "The ID of the owner for the AMI to use for the AWS EKS workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft')."
              },
              "worker_ami_owner_id_windows": {
                "default": "amazon",
                "description": "The ID of the owner for the AMI to use for the AWS EKS Windows workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft')."
              },
              "worker_create_cluster_primary_security_group_rules": {
                "default": false,
                "description": "Whether to create security group rules to allow communication between pods on workers and pods using the primary cluster security group."
              },
              "worker_create_initial_lifecycle_hooks": {
                "default": false,
                "description": "Whether to create initial lifecycle hooks provided in worker groups."
              },
              "worker_create_security_group": {
                "default": true,
                "description": "Whether to create a security group for the workers or attach the workers to `worker_security_group_id`."
              },
              "worker_groups": {
                "default": [],
                "description": "A list of maps defining worker group configurations to be defined using AWS Launch Configurations. See workers_group_defaults for valid keys."
              },
              "worker_groups_launch_template": {
                "default": [],
                "description": "A list of maps defining worker group configurations to be defined using AWS Launch Templates. See workers_group_defaults for valid keys."
              },
              "worker_security_group_id": {
                "default": "",
                "description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster."
              },
              "worker_sg_ingress_from_port": {
                "default": 1025,
                "description": "Minimum port number from which pods will accept communication. Must be changed to a lower value if some pods in your cluster will expose a port lower than 1025 (e.g. 22, 80, or 443)."
              },
              "workers_additional_policies": {
                "default": [],
                "description": "Additional policies to be added to workers"
              },
              "workers_egress_cidrs": {
                "default": [
                  "0.0.0.0/0"
                ],
                "description": "List of CIDR blocks that are permitted for workers egress traffic."
              },
              "workers_group_defaults": {
                "default": {},
                "description": "Override default values for target groups. See workers_group_defaults_defaults in local.tf for valid keys."
              },
              "workers_role_name": {
                "default": "",
                "description": "User defined workers role name."
              },
              "write_kubeconfig": {
                "default": true,
                "description": "Whether to write a Kubectl config file containing the cluster configuration. Saved to `kubeconfig_output_path`."
              }
            }
          },
          "version_constraint": "17.24.0"
        },
        "vpc": {
          "source": "terraform-aws-modules/vpc/aws",
          "expressions": {
            "azs": {
              "references": [
                "data.aws_availability_zones.available.names",
                "data.aws_availability_zones.available"
              ]
            },
            "cidr": {
              "constant_value": "10.0.0.0/16"
            },
            "enable_dns_hostnames": {
              "constant_value": true
            },
            "enable_nat_gateway": {
              "constant_value": true
            },
            "name": {
              "constant_value": "wizdemo-vpc"
            },
            "private_subnet_tags": {
              "references": [
                "local.cluster_name"
              ]
            },
            "private_subnets": {
              "constant_value": [
                "10.0.1.0/24",
                "10.0.2.0/24",
                "10.0.3.0/24"
              ]
            },
            "public_subnet_tags": {
              "references": [
                "local.cluster_name"
              ]
            },
            "public_subnets": {
              "constant_value": [
                "10.0.4.0/24",
                "10.0.5.0/24",
                "10.0.6.0/24"
              ]
            },
            "single_nat_gateway": {
              "constant_value": true
            },
            "tags": {
              "references": [
                "local.cluster_name"
              ]
            }
          },
          "module": {
            "outputs": {
              "azs": {
                "expression": {
                  "references": [
                    "var.azs"
                  ]
                },
                "description": "A list of availability zones specified as argument to this module"
              },
              "cgw_arns": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of ARNs of Customer Gateway"
              },
              "cgw_ids": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "List of IDs of Customer Gateway"
              },
              "database_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_internet_gateway"
                  ]
                },
                "description": "ID of the database internet gateway route."
              },
              "database_ipv6_egress_route_id": {
                "expression": {
                  "references": [
                    "aws_route.database_ipv6_egress"
                  ]
                },
                "description": "ID of the database IPv6 egress route."
              },
              "database_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.database_nat_gateway"
                  ]
                },
                "description": "List of IDs of the database nat gateway route."
              },
              "database_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.database"
                  ]
                },
                "description": "ARN of the database network ACL"
              },
              "database_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.database"
                  ]
                },
                "description": "ID of the database network ACL"
              },
              "database_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.database"
                  ]
                },
                "description": "List of IDs of the database route table association"
              },
              "database_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.database",
                    "aws_route_table.database",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of database route tables"
              },
              "database_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of ARNs of database subnets"
              },
              "database_subnet_group": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "ID of database subnet group"
              },
              "database_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_db_subnet_group.database"
                  ]
                },
                "description": "Name of database subnet group"
              },
              "database_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IDs of database subnets"
              },
              "database_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of cidr_blocks of database subnets"
              },
              "database_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.database"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
              },
              "default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL"
              },
              "default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the default route table"
              },
              "default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on VPC creation"
              },
              "default_vpc_arn": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ARN of the Default VPC"
              },
              "default_vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The CIDR block of the Default VPC"
              },
              "default_vpc_default_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default network ACL of the Default VPC"
              },
              "default_vpc_default_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the default route table of the Default VPC"
              },
              "default_vpc_default_security_group_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the security group created by default on Default VPC creation"
              },
              "default_vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS hostname support"
              },
              "default_vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Whether or not the Default VPC has DNS support"
              },
              "default_vpc_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the Default VPC"
              },
              "default_vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within Default VPC"
              },
              "default_vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_default_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with the Default VPC"
              },
              "egress_only_internet_gateway_id": {
                "expression": {
                  "references": [
                    "aws_egress_only_internet_gateway.this"
                  ]
                },
                "description": "The ID of the egress only Internet Gateway"
              },
              "elasticache_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ARN of the elasticache network ACL"
              },
              "elasticache_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.elasticache"
                  ]
                },
                "description": "ID of the elasticache network ACL"
              },
              "elasticache_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.elasticache"
                  ]
                },
                "description": "List of IDs of the elasticache route table association"
              },
              "elasticache_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.elasticache",
                    "aws_route_table.elasticache",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of elasticache route tables"
              },
              "elasticache_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of ARNs of elasticache subnets"
              },
              "elasticache_subnet_group": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "ID of elasticache subnet group"
              },
              "elasticache_subnet_group_name": {
                "expression": {
                  "references": [
                    "aws_elasticache_subnet_group.elasticache"
                  ]
                },
                "description": "Name of elasticache subnet group"
              },
              "elasticache_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IDs of elasticache subnets"
              },
              "elasticache_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of cidr_blocks of elasticache subnets"
              },
              "elasticache_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.elasticache"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
              },
              "igw_arn": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ARN of the Internet Gateway"
              },
              "igw_id": {
                "expression": {
                  "references": [
                    "aws_internet_gateway.this"
                  ]
                },
                "description": "The ID of the Internet Gateway"
              },
              "intra_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ARN of the intra network ACL"
              },
              "intra_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.intra"
                  ]
                },
                "description": "ID of the intra network ACL"
              },
              "intra_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.intra"
                  ]
                },
                "description": "List of IDs of the intra route table association"
              },
              "intra_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.intra"
                  ]
                },
                "description": "List of IDs of intra route tables"
              },
              "intra_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of ARNs of intra subnets"
              },
              "intra_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IDs of intra subnets"
              },
              "intra_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of cidr_blocks of intra subnets"
              },
              "intra_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.intra"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
              },
              "name": {
                "expression": {
                  "references": [
                    "var.name"
                  ]
                },
                "description": "The name of the VPC specified as argument to this module"
              },
              "nat_ids": {
                "expression": {
                  "references": [
                    "aws_eip.nat"
                  ]
                },
                "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
              },
              "nat_public_ips": {
                "expression": {
                  "references": [
                    "var.reuse_nat_ips",
                    "var.external_nat_ips",
                    "aws_eip.nat"
                  ]
                },
                "description": "List of public Elastic IPs created for AWS NAT Gateway"
              },
              "natgw_ids": {
                "expression": {
                  "references": [
                    "aws_nat_gateway.this"
                  ]
                },
                "description": "List of NAT Gateway IDs"
              },
              "outpost_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ARN of the outpost network ACL"
              },
              "outpost_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.outpost"
                  ]
                },
                "description": "ID of the outpost network ACL"
              },
              "outpost_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of ARNs of outpost subnets"
              },
              "outpost_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IDs of outpost subnets"
              },
              "outpost_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of cidr_blocks of outpost subnets"
              },
              "outpost_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.outpost"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
              },
              "private_ipv6_egress_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_ipv6_egress"
                  ]
                },
                "description": "List of IDs of the ipv6 egress route."
              },
              "private_nat_gateway_route_ids": {
                "expression": {
                  "references": [
                    "aws_route.private_nat_gateway"
                  ]
                },
                "description": "List of IDs of the private nat gateway route."
              },
              "private_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.private"
                  ]
                },
                "description": "ARN of the private network ACL"
              },
              "private_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.private"
                  ]
                },
                "description": "ID of the private network ACL"
              },
              "private_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.private"
                  ]
                },
                "description": "List of IDs of the private route table association"
              },
              "private_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of private route tables"
              },
              "private_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of ARNs of private subnets"
              },
              "private_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IDs of private subnets"
              },
              "private_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of cidr_blocks of private subnets"
              },
              "private_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.private"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
              },
              "public_internet_gateway_ipv6_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway_ipv6"
                  ]
                },
                "description": "ID of the IPv6 internet gateway route."
              },
              "public_internet_gateway_route_id": {
                "expression": {
                  "references": [
                    "aws_route.public_internet_gateway"
                  ]
                },
                "description": "ID of the internet gateway route."
              },
              "public_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.public"
                  ]
                },
                "description": "ARN of the public network ACL"
              },
              "public_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.public"
                  ]
                },
                "description": "ID of the public network ACL"
              },
              "public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.public"
                  ]
                },
                "description": "List of IDs of the public route table association"
              },
              "public_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.public"
                  ]
                },
                "description": "List of IDs of public route tables"
              },
              "public_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of ARNs of public subnets"
              },
              "public_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IDs of public subnets"
              },
              "public_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of cidr_blocks of public subnets"
              },
              "public_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.public"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
              },
              "redshift_network_acl_arn": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ARN of the redshift network ACL"
              },
              "redshift_network_acl_id": {
                "expression": {
                  "references": [
                    "aws_network_acl.redshift"
                  ]
                },
                "description": "ID of the redshift network ACL"
              },
              "redshift_public_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift_public"
                  ]
                },
                "description": "List of IDs of the public redshidt route table association"
              },
              "redshift_route_table_association_ids": {
                "expression": {
                  "references": [
                    "aws_route_table_association.redshift"
                  ]
                },
                "description": "List of IDs of the redshift route table association"
              },
              "redshift_route_table_ids": {
                "expression": {
                  "references": [
                    "aws_route_table.redshift",
                    "aws_route_table.redshift",
                    "aws_route_table.private"
                  ]
                },
                "description": "List of IDs of redshift route tables"
              },
              "redshift_subnet_arns": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of ARNs of redshift subnets"
              },
              "redshift_subnet_group": {
                "expression": {
                  "references": [
                    "aws_redshift_subnet_group.redshift"
                  ]
                },
                "description": "ID of redshift subnet group"
              },
              "redshift_subnets": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IDs of redshift subnets"
              },
              "redshift_subnets_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of cidr_blocks of redshift subnets"
              },
              "redshift_subnets_ipv6_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_subnet.redshift"
                  ]
                },
                "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
              },
              "this_customer_gateway": {
                "expression": {
                  "references": [
                    "aws_customer_gateway.this"
                  ]
                },
                "description": "Map of Customer Gateway attributes"
              },
              "vgw_arn": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this"
                  ]
                },
                "description": "The ARN of the VPN Gateway"
              },
              "vgw_id": {
                "expression": {
                  "references": [
                    "aws_vpn_gateway.this",
                    "aws_vpn_gateway_attachment.this"
                  ]
                },
                "description": "The ID of the VPN Gateway"
              },
              "vpc_arn": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ARN of the VPC"
              },
              "vpc_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The CIDR block of the VPC"
              },
              "vpc_enable_dns_hostnames": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS hostname support"
              },
              "vpc_enable_dns_support": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Whether or not the VPC has DNS support"
              },
              "vpc_flow_log_cloudwatch_iam_role_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_iam_role_arn"
                  ]
                },
                "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
              },
              "vpc_flow_log_destination_arn": {
                "expression": {
                  "references": [
                    "local.flow_log_destination_arn"
                  ]
                },
                "description": "The ARN of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_destination_type": {
                "expression": {
                  "references": [
                    "var.flow_log_destination_type"
                  ]
                },
                "description": "The type of the destination for VPC Flow Logs"
              },
              "vpc_flow_log_id": {
                "expression": {
                  "references": [
                    "aws_flow_log.this"
                  ]
                },
                "description": "The ID of the Flow Log resource"
              },
              "vpc_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the VPC"
              },
              "vpc_instance_tenancy": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "Tenancy of instances spin up within VPC"
              },
              "vpc_ipv6_association_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The association ID for the IPv6 CIDR block"
              },
              "vpc_ipv6_cidr_block": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The IPv6 CIDR block"
              },
              "vpc_main_route_table_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the main route table associated with this VPC"
              },
              "vpc_owner_id": {
                "expression": {
                  "references": [
                    "aws_vpc.this"
                  ]
                },
                "description": "The ID of the AWS account that owns the VPC"
              },
              "vpc_secondary_cidr_blocks": {
                "expression": {
                  "references": [
                    "aws_vpc_ipv4_cidr_block_association.this"
                  ]
                },
                "description": "List of secondary CIDR blocks of the VPC"
              }
            },
            "resources": [
              {
                "address": "aws_cloudwatch_log_group.flow_log",
                "mode": "managed",
                "type": "aws_cloudwatch_log_group",
                "name": "flow_log",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "kms_key_id": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_kms_key_id"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_name_prefix",
                      "local.vpc_id"
                    ]
                  },
                  "retention_in_days": {
                    "references": [
                      "var.flow_log_cloudwatch_log_group_retention_in_days"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_log_group"
                  ]
                }
              },
              {
                "address": "aws_customer_gateway.this",
                "mode": "managed",
                "type": "aws_customer_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "bgp_asn": {
                    "references": [
                      "each.value[\"bgp_asn\"]",
                      "each.value"
                    ]
                  },
                  "ip_address": {
                    "references": [
                      "each.value[\"ip_address\"]",
                      "each.value"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "each.key",
                      "var.tags",
                      "var.customer_gateway_tags"
                    ]
                  },
                  "type": {
                    "constant_value": "ipsec.1"
                  }
                },
                "schema_version": 0,
                "for_each_expression": {
                  "references": [
                    "var.customer_gateways"
                  ]
                }
              },
              {
                "address": "aws_db_subnet_group.database",
                "mode": "managed",
                "type": "aws_db_subnet_group",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_group_name",
                      "var.name",
                      "var.tags",
                      "var.database_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.create_database_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_default_network_acl.this",
                "mode": "managed",
                "type": "aws_default_network_acl",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_network_acl_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public",
                      "aws_subnet.private",
                      "aws_subnet.intra",
                      "aws_subnet.database",
                      "aws_subnet.redshift",
                      "aws_subnet.elasticache",
                      "aws_subnet.outpost",
                      "aws_network_acl.public",
                      "aws_network_acl.private",
                      "aws_network_acl.intra",
                      "aws_network_acl.database",
                      "aws_network_acl.redshift",
                      "aws_network_acl.elasticache",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_network_acl_name",
                      "var.tags",
                      "var.default_network_acl_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_network_acl"
                  ]
                }
              },
              {
                "address": "aws_default_route_table.default",
                "mode": "managed",
                "type": "aws_default_route_table",
                "name": "default",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "default_route_table_id": {
                    "references": [
                      "aws_vpc.this[0].default_route_table_id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  },
                  "propagating_vgws": {
                    "references": [
                      "var.default_route_table_propagating_vgws"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.default_route_table_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_route_table"
                  ]
                }
              },
              {
                "address": "aws_default_security_group.this",
                "mode": "managed",
                "type": "aws_default_security_group",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.default_security_group_name",
                      "var.tags",
                      "var.default_security_group_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.manage_default_security_group"
                  ]
                }
              },
              {
                "address": "aws_default_vpc.this",
                "mode": "managed",
                "type": "aws_default_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "enable_classiclink": {
                    "references": [
                      "var.default_vpc_enable_classiclink"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.default_vpc_enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.default_vpc_enable_dns_support"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.default_vpc_name",
                      "var.tags",
                      "var.default_vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.manage_default_vpc"
                  ]
                }
              },
              {
                "address": "aws_egress_only_internet_gateway.this",
                "mode": "managed",
                "type": "aws_egress_only_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "local.max_subnet_length"
                  ]
                }
              },
              {
                "address": "aws_eip.nat",
                "mode": "managed",
                "type": "aws_eip",
                "name": "nat",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_eip_tags"
                    ]
                  },
                  "vpc": {
                    "constant_value": true
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "var.reuse_nat_ips",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_elasticache_subnet_group.elasticache",
                "mode": "managed",
                "type": "aws_elasticache_subnet_group",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.create_elasticache_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_flow_log.this",
                "mode": "managed",
                "type": "aws_flow_log",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "iam_role_arn": {
                    "references": [
                      "local.flow_log_iam_role_arn"
                    ]
                  },
                  "log_destination": {
                    "references": [
                      "local.flow_log_destination_arn"
                    ]
                  },
                  "log_destination_type": {
                    "references": [
                      "var.flow_log_destination_type"
                    ]
                  },
                  "log_format": {
                    "references": [
                      "var.flow_log_log_format"
                    ]
                  },
                  "max_aggregation_interval": {
                    "references": [
                      "var.flow_log_max_aggregation_interval"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  },
                  "traffic_type": {
                    "references": [
                      "var.flow_log_traffic_type"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.enable_flow_log"
                  ]
                }
              },
              {
                "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_policy",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-to-cloudwatch-"
                  },
                  "policy": {
                    "references": [
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                      "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assume_role_policy": {
                    "references": [
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                      "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                    ]
                  },
                  "name_prefix": {
                    "constant_value": "vpc-flow-log-role-"
                  },
                  "permissions_boundary": {
                    "references": [
                      "var.vpc_flow_log_permissions_boundary"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags",
                      "var.vpc_flow_log_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                "mode": "managed",
                "type": "aws_iam_role_policy_attachment",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "policy_arn": {
                    "references": [
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                      "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_policy.vpc_flow_log_cloudwatch"
                    ]
                  },
                  "role": {
                    "references": [
                      "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                      "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                      "aws_iam_role.vpc_flow_log_cloudwatch"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "aws_internet_gateway.this",
                "mode": "managed",
                "type": "aws_internet_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.igw_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_nat_gateway.this",
                "mode": "managed",
                "type": "aws_nat_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "allocation_id": {
                    "references": [
                      "local.nat_gateway_ips",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.azs",
                      "var.single_nat_gateway",
                      "count.index",
                      "var.tags",
                      "var.nat_gateway_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                },
                "depends_on": [
                  "aws_internet_gateway.this"
                ]
              },
              {
                "address": "aws_network_acl.database",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.database"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.database_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.elasticache",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.elasticache"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.elasticache_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.intra",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.intra"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.intra_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.intra_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.outpost",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.outpost"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.outpost_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.outpost_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.private",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.private"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.private_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.public",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.public"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.public_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl.redshift",
                "mode": "managed",
                "type": "aws_network_acl",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.redshift_acl_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.database_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "database_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.database[0].id",
                      "aws_network_acl.database[0]",
                      "aws_network_acl.database"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.database_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_dedicated_network_acl",
                    "var.database_subnets",
                    "var.database_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.elasticache_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "elasticache_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.elasticache[0].id",
                      "aws_network_acl.elasticache[0]",
                      "aws_network_acl.elasticache"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.elasticache_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_dedicated_network_acl",
                    "var.elasticache_subnets",
                    "var.elasticache_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.intra_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "intra_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.intra[0].id",
                      "aws_network_acl.intra[0]",
                      "aws_network_acl.intra"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.intra_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_dedicated_network_acl",
                    "var.intra_subnets",
                    "var.intra_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.outpost_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "outpost_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.outpost[0].id",
                      "aws_network_acl.outpost[0]",
                      "aws_network_acl.outpost"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.outpost_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_dedicated_network_acl",
                    "var.outpost_subnets",
                    "var.outpost_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.private_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "private_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.private[0].id",
                      "aws_network_acl.private[0]",
                      "aws_network_acl.private"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.private_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_dedicated_network_acl",
                    "var.private_subnets",
                    "var.private_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.public_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "public_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.public[0].id",
                      "aws_network_acl.public[0]",
                      "aws_network_acl.public"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.public_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_dedicated_network_acl",
                    "var.public_subnets",
                    "var.public_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_inbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_inbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": false
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_inbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_inbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_network_acl_rule.redshift_outbound",
                "mode": "managed",
                "type": "aws_network_acl_rule",
                "name": "redshift_outbound",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "egress": {
                    "constant_value": true
                  },
                  "from_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_code": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "icmp_type": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "network_acl_id": {
                    "references": [
                      "aws_network_acl.redshift[0].id",
                      "aws_network_acl.redshift[0]",
                      "aws_network_acl.redshift"
                    ]
                  },
                  "protocol": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_action": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "rule_number": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  },
                  "to_port": {
                    "references": [
                      "var.redshift_outbound_acl_rules",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_dedicated_network_acl",
                    "var.redshift_subnets",
                    "var.redshift_outbound_acl_rules"
                  ]
                }
              },
              {
                "address": "aws_redshift_subnet_group.redshift",
                "mode": "managed",
                "type": "aws_redshift_subnet_group",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "description": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.name"
                    ]
                  },
                  "subnet_ids": {
                    "references": [
                      "aws_subnet.redshift"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.redshift_subnet_group_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.create_redshift_subnet_group"
                  ]
                }
              },
              {
                "address": "aws_route.database_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this[0].id",
                      "aws_egress_only_internet_gateway.this[0]",
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database[0].id",
                      "aws_route_table.database[0]",
                      "aws_route_table.database"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route"
                  ]
                }
              },
              {
                "address": "aws_route.database_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "database_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.create_database_internet_gateway_route",
                    "var.create_database_nat_gateway_route",
                    "var.enable_nat_gateway",
                    "var.single_nat_gateway",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.private_ipv6_egress",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_ipv6_egress",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "egress_only_gateway_id": {
                    "references": [
                      "aws_egress_only_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_egress_only_igw",
                    "var.enable_ipv6",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.private_nat_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "private_nat_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "nat_gateway_id": {
                    "references": [
                      "aws_nat_gateway.this",
                      "count.index"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_nat_gateway",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_cidr_block": {
                    "constant_value": "0.0.0.0/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  },
                  "timeouts": {
                    "create": {
                      "constant_value": "5m"
                    }
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route.public_internet_gateway_ipv6",
                "mode": "managed",
                "type": "aws_route",
                "name": "public_internet_gateway_ipv6",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "destination_ipv6_cidr_block": {
                    "constant_value": "::/0"
                  },
                  "gateway_id": {
                    "references": [
                      "aws_internet_gateway.this[0].id",
                      "aws_internet_gateway.this[0]",
                      "aws_internet_gateway.this"
                    ]
                  },
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_igw",
                    "var.enable_ipv6",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.database",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "var.name",
                      "var.database_subnet_suffix",
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_database_subnet_route_table",
                    "var.database_subnets",
                    "var.single_nat_gateway",
                    "var.create_database_internet_gateway_route",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.elasticache",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.elasticache_subnet_suffix",
                      "var.tags",
                      "var.elasticache_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_elasticache_subnet_route_table",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.intra",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.intra_subnet_suffix",
                      "var.tags",
                      "var.intra_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.private",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.single_nat_gateway",
                      "var.name",
                      "var.private_subnet_suffix",
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "local.max_subnet_length",
                    "local.nat_gateway_count"
                  ]
                }
              },
              {
                "address": "aws_route_table.public",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.tags",
                      "var.public_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table.redshift",
                "mode": "managed",
                "type": "aws_route_table",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "tags": {
                    "references": [
                      "var.name",
                      "var.redshift_subnet_suffix",
                      "var.tags",
                      "var.redshift_route_table_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.create_redshift_subnet_route_table",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.database",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.database",
                      "aws_route_table.private",
                      "var.create_database_subnet_route_table",
                      "var.single_nat_gateway",
                      "var.create_database_internet_gateway_route",
                      "count.index",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.database",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.elasticache",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.elasticache",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_elasticache_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.elasticache",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.intra",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.intra",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.outpost",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.outpost",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.private",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.private",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public[0].id",
                      "aws_route_table.public[0]",
                      "aws_route_table.public"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.public",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.private",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_route_table_association.redshift_public",
                "mode": "managed",
                "type": "aws_route_table_association",
                "name": "redshift_public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.redshift",
                      "aws_route_table.public",
                      "var.single_nat_gateway",
                      "var.create_redshift_subnet_route_table",
                      "count.index"
                    ]
                  },
                  "subnet_id": {
                    "references": [
                      "aws_subnet.redshift",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.enable_public_redshift",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.database",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "database",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.database_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.database_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.database_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.database_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.database_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.database_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.database_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.database_subnets",
                    "var.database_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.elasticache",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "elasticache",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.elasticache_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.elasticache_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.elasticache_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.elasticache_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.elasticache_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.elasticache_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.elasticache_subnets",
                    "var.elasticache_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.intra",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.intra_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.intra_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.intra_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.intra_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.intra_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.intra_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.intra_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.intra_subnets",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.outpost",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "outpost",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.outpost_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.outpost_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.outpost_az"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.outpost_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.outpost_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.outpost_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "outpost_arn": {
                    "references": [
                      "var.outpost_arn"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.outpost_subnet_suffix",
                      "var.name",
                      "var.outpost_az",
                      "var.tags",
                      "var.outpost_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.outpost_subnets",
                    "var.outpost_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.private",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.private_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.private_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.private_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.private_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.private_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.private_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.private_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.private_subnets",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.public",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.public_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.public_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.public_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.public_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.public_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "map_public_ip_on_launch": {
                    "references": [
                      "var.map_public_ip_on_launch"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.public_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.public_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.public_subnets",
                    "var.one_nat_gateway_per_az",
                    "var.public_subnets",
                    "var.azs",
                    "var.public_subnets"
                  ]
                }
              },
              {
                "address": "aws_subnet.redshift",
                "mode": "managed",
                "type": "aws_subnet",
                "name": "redshift",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_ipv6_address_on_creation": {
                    "references": [
                      "var.redshift_subnet_assign_ipv6_address_on_creation",
                      "var.assign_ipv6_address_on_creation",
                      "var.redshift_subnet_assign_ipv6_address_on_creation"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "availability_zone_id": {
                    "references": [
                      "var.azs",
                      "count.index",
                      "var.azs",
                      "count.index"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.redshift_subnets",
                      "count.index"
                    ]
                  },
                  "ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6",
                      "var.redshift_subnet_ipv6_prefixes",
                      "aws_vpc.this[0].ipv6_cidr_block",
                      "aws_vpc.this[0]",
                      "aws_vpc.this",
                      "var.redshift_subnet_ipv6_prefixes",
                      "count.index"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.redshift_subnet_suffix",
                      "var.name",
                      "var.azs",
                      "count.index",
                      "var.tags",
                      "var.redshift_subnet_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.redshift_subnets",
                    "var.redshift_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpc.this",
                "mode": "managed",
                "type": "aws_vpc",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "assign_generated_ipv6_cidr_block": {
                    "references": [
                      "var.enable_ipv6"
                    ]
                  },
                  "cidr_block": {
                    "references": [
                      "var.cidr"
                    ]
                  },
                  "enable_classiclink": {
                    "references": [
                      "var.enable_classiclink"
                    ]
                  },
                  "enable_classiclink_dns_support": {
                    "references": [
                      "var.enable_classiclink_dns_support"
                    ]
                  },
                  "enable_dns_hostnames": {
                    "references": [
                      "var.enable_dns_hostnames"
                    ]
                  },
                  "enable_dns_support": {
                    "references": [
                      "var.enable_dns_support"
                    ]
                  },
                  "instance_tenancy": {
                    "references": [
                      "var.instance_tenancy"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpc_tags"
                    ]
                  }
                },
                "schema_version": 1,
                "count_expression": {
                  "references": [
                    "var.create_vpc"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "domain_name": {
                    "references": [
                      "var.dhcp_options_domain_name"
                    ]
                  },
                  "domain_name_servers": {
                    "references": [
                      "var.dhcp_options_domain_name_servers"
                    ]
                  },
                  "netbios_name_servers": {
                    "references": [
                      "var.dhcp_options_netbios_name_servers"
                    ]
                  },
                  "netbios_node_type": {
                    "references": [
                      "var.dhcp_options_netbios_node_type"
                    ]
                  },
                  "ntp_servers": {
                    "references": [
                      "var.dhcp_options_ntp_servers"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.dhcp_options_tags"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_dhcp_options_association.this",
                "mode": "managed",
                "type": "aws_vpc_dhcp_options_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "dhcp_options_id": {
                    "references": [
                      "aws_vpc_dhcp_options.this[0].id",
                      "aws_vpc_dhcp_options.this[0]",
                      "aws_vpc_dhcp_options.this"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_dhcp_options"
                  ]
                }
              },
              {
                "address": "aws_vpc_ipv4_cidr_block_association.this",
                "mode": "managed",
                "type": "aws_vpc_ipv4_cidr_block_association",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "cidr_block": {
                    "references": [
                      "var.secondary_cidr_blocks",
                      "count.index"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "aws_vpc.this[0].id",
                      "aws_vpc.this[0]",
                      "aws_vpc.this"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.secondary_cidr_blocks",
                    "var.secondary_cidr_blocks"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway.this",
                "mode": "managed",
                "type": "aws_vpn_gateway",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "amazon_side_asn": {
                    "references": [
                      "var.amazon_side_asn"
                    ]
                  },
                  "availability_zone": {
                    "references": [
                      "var.vpn_gateway_az"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.name",
                      "var.tags",
                      "var.vpn_gateway_tags"
                    ]
                  },
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.enable_vpn_gateway"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_attachment.this",
                "mode": "managed",
                "type": "aws_vpn_gateway_attachment",
                "name": "this",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "vpc_id": {
                    "references": [
                      "local.vpc_id"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "var.vpn_gateway_id"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.intra",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "intra",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.intra",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_intra_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.intra_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.private",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "private",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.private",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_private_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id",
                    "var.private_subnets"
                  ]
                }
              },
              {
                "address": "aws_vpn_gateway_route_propagation.public",
                "mode": "managed",
                "type": "aws_vpn_gateway_route_propagation",
                "name": "public",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "route_table_id": {
                    "references": [
                      "aws_route_table.public",
                      "count.index"
                    ]
                  },
                  "vpn_gateway_id": {
                    "references": [
                      "aws_vpn_gateway.this",
                      "aws_vpn_gateway_attachment.this",
                      "count.index"
                    ]
                  }
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "var.create_vpc",
                    "var.propagate_public_route_tables_vgw",
                    "var.enable_vpn_gateway",
                    "var.vpn_gateway_id"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "flow_log_cloudwatch_assume_role",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "sts:AssumeRole"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "principals": [
                        {
                          "identifiers": {
                            "constant_value": [
                              "vpc-flow-logs.amazonaws.com"
                            ]
                          },
                          "type": {
                            "constant_value": "Service"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              },
              {
                "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                "mode": "data",
                "type": "aws_iam_policy_document",
                "name": "vpc_flow_log_cloudwatch",
                "provider_config_key": "vpc:aws",
                "expressions": {
                  "statement": [
                    {
                      "actions": {
                        "constant_value": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "logs:DescribeLogGroups",
                          "logs:DescribeLogStreams"
                        ]
                      },
                      "effect": {
                        "constant_value": "Allow"
                      },
                      "resources": {
                        "constant_value": [
                          "*"
                        ]
                      },
                      "sid": {
                        "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                      }
                    }
                  ]
                },
                "schema_version": 0,
                "count_expression": {
                  "references": [
                    "local.create_flow_log_cloudwatch_iam_role"
                  ]
                }
              }
            ],
            "variables": {
              "amazon_side_asn": {
                "default": "64512",
                "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
              },
              "assign_ipv6_address_on_creation": {
                "default": false,
                "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "azs": {
                "default": [],
                "description": "A list of availability zones names or ids in the region"
              },
              "cidr": {
                "default": "0.0.0.0/0",
                "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overridden"
              },
              "create_database_internet_gateway_route": {
                "default": false,
                "description": "Controls if an internet gateway route for public database access should be created"
              },
              "create_database_nat_gateway_route": {
                "default": false,
                "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
              },
              "create_database_subnet_group": {
                "default": true,
                "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
              },
              "create_database_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for database should be created"
              },
              "create_egress_only_igw": {
                "default": true,
                "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
              },
              "create_elasticache_subnet_group": {
                "default": true,
                "description": "Controls if elasticache subnet group should be created"
              },
              "create_elasticache_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for elasticache should be created"
              },
              "create_flow_log_cloudwatch_iam_role": {
                "default": false,
                "description": "Whether to create IAM role for VPC Flow Logs"
              },
              "create_flow_log_cloudwatch_log_group": {
                "default": false,
                "description": "Whether to create CloudWatch log group for VPC Flow Logs"
              },
              "create_igw": {
                "default": true,
                "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
              },
              "create_redshift_subnet_group": {
                "default": true,
                "description": "Controls if redshift subnet group should be created"
              },
              "create_redshift_subnet_route_table": {
                "default": false,
                "description": "Controls if separate route table for redshift should be created"
              },
              "create_vpc": {
                "default": true,
                "description": "Controls if VPC should be created (it affects almost all resources)"
              },
              "customer_gateway_tags": {
                "default": {},
                "description": "Additional tags for the Customer Gateway"
              },
              "customer_gateways": {
                "default": {},
                "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
              },
              "database_acl_tags": {
                "default": {},
                "description": "Additional tags for the database subnets network ACL"
              },
              "database_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
              },
              "database_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets inbound network ACL rules"
              },
              "database_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Database subnets outbound network ACL rules"
              },
              "database_route_table_tags": {
                "default": {},
                "description": "Additional tags for the database route tables"
              },
              "database_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "database_subnet_group_name": {
                "default": null,
                "description": "Name of database subnet group"
              },
              "database_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the database subnet group"
              },
              "database_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "database_subnet_suffix": {
                "default": "db",
                "description": "Suffix to append to database subnets name"
              },
              "database_subnet_tags": {
                "default": {},
                "description": "Additional tags for the database subnets"
              },
              "database_subnets": {
                "default": [],
                "description": "A list of database subnets"
              },
              "default_network_acl_egress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of egress rules to set on the Default Network ACL"
              },
              "default_network_acl_ingress": {
                "default": [
                  {
                    "action": "allow",
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_no": "100",
                    "to_port": "0"
                  },
                  {
                    "action": "allow",
                    "from_port": "0",
                    "ipv6_cidr_block": "::/0",
                    "protocol": "-1",
                    "rule_no": "101",
                    "to_port": "0"
                  }
                ],
                "description": "List of maps of ingress rules to set on the Default Network ACL"
              },
              "default_network_acl_name": {
                "default": "",
                "description": "Name to be used on the Default Network ACL"
              },
              "default_network_acl_tags": {
                "default": {},
                "description": "Additional tags for the Default Network ACL"
              },
              "default_route_table_propagating_vgws": {
                "default": [],
                "description": "List of virtual gateways for propagation"
              },
              "default_route_table_routes": {
                "default": [],
                "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
              },
              "default_route_table_tags": {
                "default": {},
                "description": "Additional tags for the default route table"
              },
              "default_security_group_egress": {
                "default": null,
                "description": "List of maps of egress rules to set on the default security group"
              },
              "default_security_group_ingress": {
                "default": null,
                "description": "List of maps of ingress rules to set on the default security group"
              },
              "default_security_group_name": {
                "default": "default",
                "description": "Name to be used on the default security group"
              },
              "default_security_group_tags": {
                "default": {},
                "description": "Additional tags for the default security group"
              },
              "default_vpc_enable_classiclink": {
                "default": false,
                "description": "Should be true to enable ClassicLink in the Default VPC"
              },
              "default_vpc_enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the Default VPC"
              },
              "default_vpc_enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the Default VPC"
              },
              "default_vpc_name": {
                "default": "",
                "description": "Name to be used on the Default VPC"
              },
              "default_vpc_tags": {
                "default": {},
                "description": "Additional tags for the Default VPC"
              },
              "dhcp_options_domain_name": {
                "default": "",
                "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_domain_name_servers": {
                "default": [
                  "AmazonProvidedDNS"
                ],
                "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_name_servers": {
                "default": [],
                "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_netbios_node_type": {
                "default": "",
                "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_ntp_servers": {
                "default": [],
                "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
              },
              "dhcp_options_tags": {
                "default": {},
                "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
              },
              "elasticache_acl_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets network ACL"
              },
              "elasticache_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
              },
              "elasticache_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets inbound network ACL rules"
              },
              "elasticache_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Elasticache subnets outbound network ACL rules"
              },
              "elasticache_route_table_tags": {
                "default": {},
                "description": "Additional tags for the elasticache route tables"
              },
              "elasticache_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "elasticache_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "elasticache_subnet_suffix": {
                "default": "elasticache",
                "description": "Suffix to append to elasticache subnets name"
              },
              "elasticache_subnet_tags": {
                "default": {},
                "description": "Additional tags for the elasticache subnets"
              },
              "elasticache_subnets": {
                "default": [],
                "description": "A list of elasticache subnets"
              },
              "enable_classiclink": {
                "default": null,
                "description": "Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_classiclink_dns_support": {
                "default": null,
                "description": "Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
              },
              "enable_dhcp_options": {
                "default": false,
                "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
              },
              "enable_dns_hostnames": {
                "default": false,
                "description": "Should be true to enable DNS hostnames in the VPC"
              },
              "enable_dns_support": {
                "default": true,
                "description": "Should be true to enable DNS support in the VPC"
              },
              "enable_flow_log": {
                "default": false,
                "description": "Whether or not to enable VPC Flow Logs"
              },
              "enable_ipv6": {
                "default": false,
                "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
              },
              "enable_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
              },
              "enable_public_redshift": {
                "default": false,
                "description": "Controls if redshift should have public routing table"
              },
              "enable_vpn_gateway": {
                "default": false,
                "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
              },
              "external_nat_ip_ids": {
                "default": [],
                "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
              },
              "external_nat_ips": {
                "default": [],
                "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
              },
              "flow_log_cloudwatch_iam_role_arn": {
                "default": "",
                "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
              },
              "flow_log_cloudwatch_log_group_kms_key_id": {
                "default": null,
                "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_name_prefix": {
                "default": "/aws/vpc-flow-log/",
                "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
              },
              "flow_log_cloudwatch_log_group_retention_in_days": {
                "default": null,
                "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
              },
              "flow_log_destination_arn": {
                "default": "",
                "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
              },
              "flow_log_destination_type": {
                "default": "cloud-watch-logs",
                "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
              },
              "flow_log_log_format": {
                "default": null,
                "description": "The fields to include in the flow log record, in the order in which they should appear."
              },
              "flow_log_max_aggregation_interval": {
                "default": 600,
                "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
              },
              "flow_log_traffic_type": {
                "default": "ALL",
                "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
              },
              "igw_tags": {
                "default": {},
                "description": "Additional tags for the internet gateway"
              },
              "instance_tenancy": {
                "default": "default",
                "description": "A tenancy option for instances launched into the VPC"
              },
              "intra_acl_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets network ACL"
              },
              "intra_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
              },
              "intra_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets inbound network ACLs"
              },
              "intra_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Intra subnets outbound network ACLs"
              },
              "intra_route_table_tags": {
                "default": {},
                "description": "Additional tags for the intra route tables"
              },
              "intra_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "intra_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "intra_subnet_suffix": {
                "default": "intra",
                "description": "Suffix to append to intra subnets name"
              },
              "intra_subnet_tags": {
                "default": {},
                "description": "Additional tags for the intra subnets"
              },
              "intra_subnets": {
                "default": [],
                "description": "A list of intra subnets"
              },
              "manage_default_network_acl": {
                "default": false,
                "description": "Should be true to adopt and manage Default Network ACL"
              },
              "manage_default_route_table": {
                "default": false,
                "description": "Should be true to manage default route table"
              },
              "manage_default_security_group": {
                "default": false,
                "description": "Should be true to adopt and manage default security group"
              },
              "manage_default_vpc": {
                "default": false,
                "description": "Should be true to adopt and manage Default VPC"
              },
              "map_public_ip_on_launch": {
                "default": true,
                "description": "Should be false if you do not want to auto-assign public IP on launch"
              },
              "name": {
                "default": "",
                "description": "Name to be used on all the resources as identifier"
              },
              "nat_eip_tags": {
                "default": {},
                "description": "Additional tags for the NAT EIP"
              },
              "nat_gateway_tags": {
                "default": {},
                "description": "Additional tags for the NAT gateways"
              },
              "one_nat_gateway_per_az": {
                "default": false,
                "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
              },
              "outpost_acl_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets network ACL"
              },
              "outpost_arn": {
                "default": null,
                "description": "ARN of Outpost you want to create a subnet in."
              },
              "outpost_az": {
                "default": null,
                "description": "AZ where Outpost is anchored."
              },
              "outpost_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
              },
              "outpost_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets inbound network ACLs"
              },
              "outpost_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Outpost subnets outbound network ACLs"
              },
              "outpost_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "outpost_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "outpost_subnet_suffix": {
                "default": "outpost",
                "description": "Suffix to append to outpost subnets name"
              },
              "outpost_subnet_tags": {
                "default": {},
                "description": "Additional tags for the outpost subnets"
              },
              "outpost_subnets": {
                "default": [],
                "description": "A list of outpost subnets inside the VPC"
              },
              "private_acl_tags": {
                "default": {},
                "description": "Additional tags for the private subnets network ACL"
              },
              "private_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
              },
              "private_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets inbound network ACLs"
              },
              "private_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Private subnets outbound network ACLs"
              },
              "private_route_table_tags": {
                "default": {},
                "description": "Additional tags for the private route tables"
              },
              "private_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "private_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "private_subnet_suffix": {
                "default": "private",
                "description": "Suffix to append to private subnets name"
              },
              "private_subnet_tags": {
                "default": {},
                "description": "Additional tags for the private subnets"
              },
              "private_subnets": {
                "default": [],
                "description": "A list of private subnets inside the VPC"
              },
              "propagate_intra_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_private_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "propagate_public_route_tables_vgw": {
                "default": false,
                "description": "Should be true if you want route table propagation"
              },
              "public_acl_tags": {
                "default": {},
                "description": "Additional tags for the public subnets network ACL"
              },
              "public_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
              },
              "public_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets inbound network ACLs"
              },
              "public_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Public subnets outbound network ACLs"
              },
              "public_route_table_tags": {
                "default": {},
                "description": "Additional tags for the public route tables"
              },
              "public_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "public_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "public_subnet_suffix": {
                "default": "public",
                "description": "Suffix to append to public subnets name"
              },
              "public_subnet_tags": {
                "default": {},
                "description": "Additional tags for the public subnets"
              },
              "public_subnets": {
                "default": [],
                "description": "A list of public subnets inside the VPC"
              },
              "redshift_acl_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets network ACL"
              },
              "redshift_dedicated_network_acl": {
                "default": false,
                "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
              },
              "redshift_inbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets inbound network ACL rules"
              },
              "redshift_outbound_acl_rules": {
                "default": [
                  {
                    "cidr_block": "0.0.0.0/0",
                    "from_port": "0",
                    "protocol": "-1",
                    "rule_action": "allow",
                    "rule_number": "100",
                    "to_port": "0"
                  }
                ],
                "description": "Redshift subnets outbound network ACL rules"
              },
              "redshift_route_table_tags": {
                "default": {},
                "description": "Additional tags for the redshift route tables"
              },
              "redshift_subnet_assign_ipv6_address_on_creation": {
                "default": null,
                "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
              },
              "redshift_subnet_group_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnet group"
              },
              "redshift_subnet_ipv6_prefixes": {
                "default": [],
                "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
              },
              "redshift_subnet_suffix": {
                "default": "redshift",
                "description": "Suffix to append to redshift subnets name"
              },
              "redshift_subnet_tags": {
                "default": {},
                "description": "Additional tags for the redshift subnets"
              },
              "redshift_subnets": {
                "default": [],
                "description": "A list of redshift subnets"
              },
              "reuse_nat_ips": {
                "default": false,
                "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
              },
              "secondary_cidr_blocks": {
                "default": [],
                "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
              },
              "single_nat_gateway": {
                "default": false,
                "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
              },
              "tags": {
                "default": {},
                "description": "A map of tags to add to all resources"
              },
              "vpc_flow_log_permissions_boundary": {
                "default": null,
                "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
              },
              "vpc_flow_log_tags": {
                "default": {},
                "description": "Additional tags for the VPC Flow Logs"
              },
              "vpc_tags": {
                "default": {},
                "description": "Additional tags for the VPC"
              },
              "vpn_gateway_az": {
                "default": null,
                "description": "The Availability Zone for the VPN Gateway"
              },
              "vpn_gateway_id": {
                "default": "",
                "description": "ID of VPN Gateway to attach to the VPC"
              },
              "vpn_gateway_tags": {
                "default": {},
                "description": "Additional tags for the VPN gateway"
              }
            }
          },
          "version_constraint": "3.2.0"
        },
        "wiz": {
          "source": "./wiz-aws-account-terraform-module",
          "expressions": {
            "cloud_environment": {
              "constant_value": "Commercial"
            },
            "external_id": {
              "references": [
                "var.wiz_connector_external_id"
              ]
            },
            "tags": {
              "constant_value": {
                "name": "wiz"
              }
            }
          },
          "module": {
            "outputs": {
              "wiz_external_id": {
                "expression": {
                  "references": [
                    "aws_cloudformation_stack.wiz.outputs.ExternalID",
                    "aws_cloudformation_stack.wiz.outputs",
                    "aws_cloudformation_stack.wiz"
                  ]
                }
              },
              "wiz_role_iam": {
                "expression": {
                  "references": [
                    "aws_cloudformation_stack.wiz.outputs.RoleARNID",
                    "aws_cloudformation_stack.wiz.outputs",
                    "aws_cloudformation_stack.wiz"
                  ]
                }
              }
            },
            "resources": [
              {
                "address": "aws_cloudformation_stack.wiz",
                "mode": "managed",
                "type": "aws_cloudformation_stack",
                "name": "wiz",
                "provider_config_key": "wiz:aws",
                "expressions": {
                  "capabilities": {
                    "constant_value": [
                      "CAPABILITY_NAMED_IAM"
                    ]
                  },
                  "name": {
                    "references": [
                      "var.cloudformation_stack_name"
                    ]
                  },
                  "parameters": {
                    "references": [
                      "var.wiz_security_role_suffix",
                      "var.external_id"
                    ]
                  },
                  "tags": {
                    "references": [
                      "var.tags"
                    ]
                  },
                  "template_url": {
                    "references": [
                      "var.cloudformation_template_url",
                      "var.cloud_environment"
                    ]
                  }
                },
                "schema_version": 0
              }
            ],
            "variables": {
              "cloud_environment": {
                "default": "Commercial",
                "description": "AWS cloud environment (Commercial or GovCloud), default is Commercial"
              },
              "cloudformation_stack_name": {
                "default": "wiz-security",
                "description": "Cloudfortmaion stack name"
              },
              "cloudformation_template_url": {
                "default": {
                  "Commercial": "https://wizio-public.s3.amazonaws.com/deployment-v2/aws/wiz-aws-standard-prod4test.json",
                  "GovCloud": "https://wizio-public.s3.amazonaws.com/deployment-v2/aws/wiz-aws-standard-govcloud.json"
                }
              },
              "external_id": {},
              "tags": {
                "default": {}
              },
              "wiz_security_role_suffix": {
                "default": "WizAccess-Role",
                "description": "Role name that will be installed on your account, the default is WizAccess-Role (which is great)"
              }
            }
          }
        }
      },
      "variables": {
        "my_bucket_name": {
          "default": "this-bucket-wont-be-deleted1123"
        },
        "my_ip_address": {
          "default": "69.249.56.91/32"
        },
        "my_ssh_public_key": {
          "default": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQClcA8kp7FqrQaOHEjNamL8A1u33efe6ffWClYxKKDk9L8BEA7mYwGXqsfWyGHtchhKG9r6XhPll0t2S5eS8e5QIRwLQrkhUBLjzyR6u1H2mAqLiN4Jbo6wc3Szku78hZ7oyMPbWB4jscMLwGYSlJWk/9IKex7X/JHSarFF4pXERknuOaHkVgpfVQ1GMCUn+ooWYE6eVbMjxE26j87S5ykSzhczdxu2dqAPjSFnjbBGjKQTeppvT1QBR3+flqFlA58eif1zCDfiYQ+L6CjBN/hlpF5xBJPdCxCmzcQ9nefjxsjOnQniZcyJ5NOvtQCU8UaJra0LDOHs1pO4uJoXCbDevTscWSCJXbroZ+Ml7lPq5WYYuWlS3XOaEAQmdIHXoJa+8k03C7nf3AM2iB0ss9LM5bGHGuVKsLuZEbLxcEUnyF2EbwyigwoV6qfIRQqlG2V9Xs+kAphln2k+I1kKVIpqzB9PQFBPp2VKauvoqsLXPr0OG/c+qy+6XNbrlgUIJPc= steve@Steves-MacBook-Pro.local"
        },
        "region": {
          "default": "us-east-1",
          "description": "AWS region"
        },
        "wiz_connector_external_id": {
          "default": "145cc1fc-3303-483f-a5e3-7a253e36127e"
        }
      }
    }
  }
}
